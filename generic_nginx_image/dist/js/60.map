{"version":3,"file":"js/60.chunk.js","sources":["webpack:///./src/app/models/ActivityCategory.ts?f555","webpack:///./src/app/models/Activity.ts?6d87","webpack:///./src/app/models/ActivityCategoryAssignment.ts?e1e9","webpack:///./src/app/services/maintenance/activity-categoy.service.ts?e66c","webpack:///./src/app/services/maintenance/activity-category-assignment.service.ts?eb09","webpack:///./src/app/maintenance/activity/activity-category/activity-category-list.component.ts","webpack:///./src/app/maintenance/activity/activity-to-activity-category/activity-to-activity-category.component.ts","webpack:///./src/app/maintenance/activity/list/activity-list.component.ts","webpack:///./src/app/services/maintenance/activity.service.ts","webpack:///./src/app/maintenance/activity/activity.module.ts","webpack:///./src/app/maintenance/activity/activity.routing.ts","webpack:///./src/app/maintenance/activity/activity-category/activity-category-list.component.html","webpack:///./src/app/maintenance/activity/activity-to-activity-category/activity-to-activity-category.component.html","webpack:///./src/app/maintenance/activity/list/activity-list-component.html"],"sourcesContent":["import {DomainObject} from \"./DomainObject\";\n\nexport class ActivityCategory extends DomainObject{\n    prepareData(): void {\n    }\n\n    public uid: number;\n    public name: string;\n    public description: string;\n    public status: string;\n    public selected: boolean;\n\n    constructor(data?: any){\n        super();\n\n        if(data) {\n            this.uid = data.uid;\n            this.name = data.name;\n            this.description = data.description;\n            this.status = data.status;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/models/ActivityCategory.ts","import {DomainObject} from \"./DomainObject\";\n\nexport class Activity extends DomainObject{\n    prepareData(): void {\n    }\n\n    public uid: number;\n    public name: string;\n    public description: string;\n    public status:string;\n    public selected: boolean;\n\n    constructor(data?: any){\n        super();\n\n        if(data){\n            this.uid = data.uid;\n            this.name = data.name;\n            this.description = data.description;\n            this.status = data.status;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/models/Activity.ts","import {DomainObject} from \"./DomainObject\";\nimport {Activity} from \"./Activity\";\nimport {ActivityCategory} from \"./ActivityCategory\";\nimport {VesselType} from \"./VesselType\";\nimport Any = jasmine.Any;\n\nexport class ActivityCategoryAssignment extends DomainObject {\n\n    prepareData(): void {\n        if(this!.vesselTypesIds){\n            this.vesselTypes = this.vesselTypesIds;\n        }\n    }\n\n    public uid: number;\n\n    public vesselTypes: Array<any>;\n    public vesselTypesIds: Array<number>;\n\n    public activity: Activity;\n    public activityCategory: ActivityCategory;\n    public weight: number;\n    public occurrences: number;\n    public ranged: boolean;\n    public mandatory: boolean;\n    public billable: boolean;\n    public statementOfFact: boolean;\n    public status: string;\n    public selected: boolean;\n\n    public vesselTypesString: string;\n\n    constructor(data?: any){\n        super(data);\n\n        if(data){\n            this.uid = data.uid;\n\n            this.vesselTypes = data.vesselTypes;\n            if (this.vesselTypes && this.vesselTypes.length) {\n                if (this.vesselTypes.length == 1) {\n                    this.vesselTypesString = this.vesselTypes[0].description;\n                } else if (this.vesselTypes.length > 1) {\n                    this.vesselTypesString = 'Multiple';\n                }\n            }\n            this.vesselTypesIds = [];\n            if(data.vesselTypes){\n                for(let v of data.vesselTypes){\n                    this.vesselTypesIds.push((v as VesselType).uid);\n                }\n            }\n\n            this.activity = new Activity (data.activity);\n            this.activityCategory = new ActivityCategory (data.activityCategory);\n            this.weight = data.weight;\n            this.occurrences = data.occurrences;\n            this.ranged = data.ranged;\n            this.mandatory = data.mandatory;\n            this.billable = data.billable;\n            this.statementOfFact = data.statementOfFact;\n            this.status = data.status;\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/models/ActivityCategoryAssignment.ts","import {Injectable, Inject} from \"@angular/core\";\nimport {AbstractService} from \"../abstract-service\";\nimport {Http, Response} from \"@angular/http\";\nimport {AppProperties} from \"../../app.properties\";\nimport {ActivityCategory} from \"../../models/ActivityCategory\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ActivityCategoryService extends AbstractService {\n\n    constructor(private http: Http, @Inject(AppProperties) appProps: AppProperties) {\n        super(appProps);\n    }\n\n    public getAll(): Observable<Array<ActivityCategory>>{\n        return this.http.get(this.apiBaseUrl + '/activity-categories', this.getStandardRequestOptions())\n            .map(this.extractMany)\n            .catch(this.handleError);\n    }\n\n    public getAllActive(): Observable<Array<ActivityCategory>>{\n        return this.http.get(this.apiBaseUrl + '/activity-categories?active=1', this.getStandardRequestOptions())\n            .map(this.extractMany)\n            .catch(this.handleError);\n    }\n\n    public getAllActiveActivityCategory(): Observable<Array<ActivityCategory>>{\n        return this.http.get(this.apiBaseUrl + '/activity-categories', this.getStandardRequestOptions())\n            .map(this.extractMany)\n            .catch(this.handleError);\n    }\n\n    public createActivityCategory(activityCategory: ActivityCategory): Observable<ActivityCategory> {\n        return this.http.post(this.apiBaseUrl + '/activity-categories',activityCategory, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    public deleteActivityCategory(uidActivityCategory: number): Observable<any>{\n        return this.http.delete(this.apiBaseUrl + '/activity-categories/' + uidActivityCategory, this.getStandardRequestOptions())\n            .map((res: Response) => {\n                return true;\n            })\n            .catch(this.handleError);\n\n    }\n\n    public handleError(error: Response){\n        if(error.status == 409){\n            return Observable.throw({error:\"The Activity Category has already been associated with Activities\", status: error.status});\n        }else{\n            return super.handleError(error);\n        }\n    }\n\n    public updateActivityCategory(activityCategory: ActivityCategory): Observable<ActivityCategory> {\n        return this.http.put(this.apiBaseUrl + '/activity-categories/'+ activityCategory.uid,activityCategory, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    public toggleActivityCategoryStatus(activitiesUid: number[]): Observable<any>{\n        return this.http.post(this.apiBaseUrl + '/activity-categories/activity-category-status/toggle',activitiesUid, this.getStandardRequestOptions())\n            .catch(this.handleError);\n    }\n\n    public getActivityCategoryById(activityCategoryUidL: number): Observable<ActivityCategory>{\n        return this.http.get(this.apiBaseUrl + '/activity-categories/'+ activityCategoryUidL, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    private extractOne(res: Response): ActivityCategory {\n        return (res.json() || {}) as ActivityCategory;\n    }\n\n    private extractMany(res: Response): ActivityCategory[] {\n        return (res.json() || {}) as ActivityCategory[];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/services/maintenance/activity-categoy.service.ts","import {Injectable, Inject} from \"@angular/core\";\nimport {AbstractService} from \"../abstract-service\";\nimport {Http, Response} from \"@angular/http\";\nimport {AppProperties} from \"../../app.properties\";\nimport {Observable} from \"rxjs\";\nimport {ActivityCategoryAssignment} from \"../../models/ActivityCategoryAssignment\";\nimport {Activity} from \"../../models/Activity\";\nimport {ActivityCategory} from \"../../models/ActivityCategory\";\nimport {VesselType} from \"../../models/VesselType\";\n\n@Injectable()\nexport class ActivityCategoryAssignmentService extends AbstractService {\n\n    constructor(private http: Http, @Inject(AppProperties) appProps: AppProperties) {\n        super(appProps);\n    }\n\n    public listActivitiesNotAssignedToCategory(uidCategory: number): Observable<Array<Activity>>{\n        return this.http.get(this.apiBaseUrl + '/activities?activityCategory=' +uidCategory, this.getStandardRequestOptions())\n            .map(this.extractManyActivity)\n            .catch(this.handleError);\n    }\n\n    public listCategoriesNotAssignedToActivity(uidActivity: number): Observable<Array<ActivityCategory>>{\n        return this.http.get(this.apiBaseUrl + '/activities-categories?' +uidActivity, this.getStandardRequestOptions())\n            .map(this.extractManyActivityCategory)\n            .catch(this.handleError);\n    }\n\n    public getAllActivityCategoryAssignmentsByCategory(uidCategory: number): Observable<Array<ActivityCategoryAssignment>>{\n        return this.http.get(this.apiBaseUrl + '/activity-categories/' +uidCategory+ '/assignments', this.getStandardRequestOptions())\n            .map(this.extractMany)\n            .catch(this.handleError);\n    }\n\n    public createActivityCategoryAssignment(activityCategoryAssignment: ActivityCategoryAssignment, uidActivityCategory: number): Observable<ActivityCategoryAssignment>{\n        return this.http.post(this.apiBaseUrl + '/activity-categories/' +uidActivityCategory+ '/assignments', activityCategoryAssignment, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    public updateActivityCategoryAssignment(activityCategoryAssignment: ActivityCategoryAssignment,  uidActivityCategory: number): Observable<ActivityCategoryAssignment>{\n        return this.http.put(this.apiBaseUrl + '/activity-categories/' +uidActivityCategory+ '/assignments/' +activityCategoryAssignment.uid, activityCategoryAssignment, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    public deleteActivityCategoryAssignment(uidActivityCategoryAssignment: number, uidActivityCategory: number): Observable<any>{\n        return this.http.delete(this.apiBaseUrl + '/activity-categories/' +uidActivityCategory+ '/assignments/'+uidActivityCategoryAssignment, this.getStandardRequestOptions())\n            .map((res: Response) => {\n                return true;\n            })\n            .catch(this.handleError);\n    }\n\n    public toggleActivityCategoryAssignmentsStatus(uidActivityCategoryAssignments: number[], uidActivityCategory: number): Observable<any>{\n        return this.http.post(this.apiBaseUrl + '/activity-categories/' +uidActivityCategory+ '/assignments/activity-category-assignment-status/toggle',uidActivityCategoryAssignments, this.getStandardRequestOptions())\n            .catch(this.handleError);\n    }\n\n    public getVesselTypes(): Observable<Array<VesselType>>{\n        return this.http.get(this.apiBaseUrl + '/vessel-types/', this.getStandardRequestOptions())\n            .map(this.extractManyVesselType)\n            .catch(this.handleError);\n    }\n\n    public handleError(error: Response){\n        if(error.status == 409){\n            return Observable.throw({error:\"The Activity has already been added to the Activity Log\", status: error.status});\n        }else{\n            return super.handleError(error);\n        }\n    }\n\n    private extractOne(res: Response): ActivityCategoryAssignment {\n        return new ActivityCategoryAssignment (res.json() || {});\n    }\n\n    private extractMany(res: Response): ActivityCategoryAssignment[] {\n        let result: Array<ActivityCategoryAssignment> = [];\n        let jsonRes = res.json();\n\n        if (jsonRes) {\n            jsonRes.forEach((activityCategoryAssignment: any) => {\n                result.push(new ActivityCategoryAssignment(activityCategoryAssignment));\n            });\n        }\n\n        return result;\n    }\n\n    private extractManyVesselType(res: Response): VesselType[] {\n        let result: Array<VesselType> = [];\n        let jsonRes = res.json();\n\n        if (jsonRes) {\n            jsonRes.forEach((vesselType: any) => {\n                result.push(new VesselType(vesselType));\n            });\n        }\n\n        return result;\n    }\n\n    private extractManyActivity(res: Response): Activity[] {\n        let result: Array<Activity> = [];\n        let jsonRes = res.json();\n\n        if (jsonRes) {\n            jsonRes.forEach((activity: any) => {\n                result.push(new Activity(activity));\n            });\n        }\n\n        return result;\n    }\n\n    private extractManyActivityCategory(res: Response): ActivityCategory[] {\n        let result: Array<ActivityCategory> = [];\n        let jsonRes = res.json();\n\n        if (jsonRes) {\n            jsonRes.forEach((activityCategory: any) => {\n                result.push(new ActivityCategory(activityCategory));\n            });\n        }\n\n        return result;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/services/maintenance/activity-category-assignment.service.ts","import {ActivityCategoryService} from \"../../../services/maintenance/activity-categoy.service\";\nimport {OnInit, Inject, Component} from \"@angular/core\";\nimport {ActivityCategory} from \"../../../models/ActivityCategory\";\nimport {Subscription} from \"rxjs\";\nimport {AppProperties} from \"../../../app.properties\";\nimport {NotificationService} from \"../../../shared/utils/notification.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'activity-category-list',\n    template: require('./activity-category-list.component.html'),\n    providers: [ActivityCategoryService],\n})\n\nexport class ActivityCategoryListComponent implements OnInit{\n\n    public filterQuery = \"\";\n    public tableData: ActivityCategory[] = [];\n    public dateTimeFormat?: string;\n    private sub: Subscription;\n    public selectedActivityCategoriesUid : Array<number> = new Array<number>();\n    public activityCategory : ActivityCategory = new ActivityCategory();\n    public allSelected: boolean = false;\n\n    public isNewActivityCategory: boolean = false;\n\n    public isUpdateActivityCategory: boolean = false;\n\n    constructor(private activityCategoryService: ActivityCategoryService,private router: Router,\n                @Inject(AppProperties) appProps: AppProperties,\n                private notificationService: NotificationService) {\n        this.dateTimeFormat = appProps.get(AppProperties.DEFAULT_DATE_TIME_FORMAT_KEY);\n    }\n\n    ngOnInit(): void {\n        this.fetchActivityCategories();\n    }\n\n    public toggleCategoriesSelection(event) {\n        let checkbox = <HTMLInputElement> event.target;\n        this.allSelected = checkbox.checked;\n        this.selectedActivityCategoriesUid = new Array();\n        for (let a of this.tableData) {\n            a.selected = this.allSelected;\n            if (this.allSelected)\n                this.selectedActivityCategoriesUid.push(a.uid);\n        }\n    }\n\n    public assignActivities(): void{\n        this.router.navigateByUrl('/maintenance/activity/activity-to-activity-category');\n    }\n\n    public createNewActivityCategory(){\n        this.cancelEdit();\n        this.isNewActivityCategory = true;\n        this.activityCategory = new ActivityCategory();\n        this.activityCategory.status = \"Active\";\n    }\n\n    public submitActivityCategory(){\n        if (this.isNewActivityCategory){\n            this.sub = this.activityCategoryService.createActivityCategory(this.activityCategory).subscribe((activityCategory) =>{\n                this.fetchActivityCategories();\n                this.notificationService.smallBox({\n                    title: \"Record Added\",\n                    content: \"The Activity Category was successfully added.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n                this.cancelEdit();\n            }, (errors) =>{\n                console.log(errors);\n            });\n        }\n        if (this.isUpdateActivityCategory){\n            this.sub = this.activityCategoryService.updateActivityCategory(this.activityCategory).subscribe((activityCategory) =>{\n                this.fetchActivityCategories();\n                this.notificationService.smallBox({\n                    title: \"Record Updated\",\n                    content: \"The Activity Category was successfully updated.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n                this.cancelEdit();\n            }, (errors) =>{\n                console.log(errors);\n            });\n        }\n    }\n\n    public cancelEdit() {\n        this.isUpdateActivityCategory = false;\n        this.isNewActivityCategory = false;\n        this.activityCategory = new ActivityCategory();\n\n    }\n\n    public updateActivityCategory(activityCategory: ActivityCategory) {\n        this.cancelEdit();\n        this.isUpdateActivityCategory = true;\n        this.activityCategory = activityCategory;\n    }\n\n    public deleteActivityCategory(uidActivityCategory: number){\n        this.notificationService.smartMessageBox({\n            title:\"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion\",\n            content:\"Do you wish to Delete this record\",\n            buttons:\"[Cancel][OK]\"\n        }, (button) =>{\n            if(button == \"OK\"){\n                this.sub = this.activityCategoryService.deleteActivityCategory(uidActivityCategory).subscribe(()=>{\n                    this.notificationService.smallBox({\n                        title: \"Deletion Successful\",\n                        content: \"The Activity Category was successfully deleted.\",\n                        color: \"#739E73\",\n                        timeout: 5000,\n                        icon: \"fa fa-check\"\n                    });\n                    this.fetchActivityCategories();\n                }, (errors) =>{\n                    console.log(errors);\n                    if(errors.status === 409){\n                        this.notificationService.smallBox({\n                            title: \"Record cannot be Deleted\",\n                            content: errors.error,\n                            color: \"#C46A69\",\n                            timeout: 5000,\n                            icon: \"fa fa-warning\"\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    public activeDeactiveActivities(){\n        this.activityCategoryService.toggleActivityCategoryStatus(this.selectedActivityCategoriesUid).subscribe(()=>{\n                this.fetchActivityCategories();\n            },\n            (errors) => {\n                console.log(errors);\n            }\n        );\n    }\n\n    private fetchActivityCategories() {\n        this.sub = this.activityCategoryService.getAll().subscribe((activities) => {\n            this.tableData = activities;\n        });\n        this.selectedActivityCategoriesUid = new Array();\n        this.isNewActivityCategory = false;\n        this.isUpdateActivityCategory = false;\n        this.allSelected = false;\n    }\n\n    public updateSelection(activityCategoryUid: number, selected: boolean): void {\n        if (selected) {\n            this.selectedActivityCategoriesUid.push(activityCategoryUid);\n        } else {\n            let auxUidList : number[] = [];\n            for(let n of this.selectedActivityCategoriesUid) {\n                if (n != activityCategoryUid) {\n                    auxUidList.push(n);\n                }\n            }\n            this.selectedActivityCategoriesUid = auxUidList;\n        }\n        this.allSelected = this.tableData.length == this.selectedActivityCategoriesUid.length;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/activity/activity-category/activity-category-list.component.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Router, ActivatedRoute} from \"@angular/router\";\nimport {ActivityCategoryAssignmentService} from \"../../../services/maintenance/activity-category-assignment.service\";\nimport {Activity} from \"../../../models/Activity\";\nimport {ActivityCategory} from \"../../../models/ActivityCategory\";\nimport {ActivityCategoryService} from \"../../../services/maintenance/activity-categoy.service\";\nimport {ActivityService} from \"../../../services/maintenance/activity.service\";\nimport {ActivityCategoryAssignment} from \"../../../models/ActivityCategoryAssignment\";\nimport {NotificationService} from \"../../../shared/utils/notification.service\";\nimport {VesselType} from \"../../../models/VesselType\";\n\n@Component({\n    selector: 'activity-to-activity-category',\n    template: require('./activity-to-activity-category.component.html'),\n    providers: [ActivityCategoryAssignmentService,\n                ActivityCategoryService,\n                ActivityService,\n                NotificationService]\n})\n\nexport class ActivityToActivityCategoryComponent implements OnInit{\n\n    public filterQuery = \"\";\n    public tableData: ActivityCategoryAssignment [] = [];\n    public dateTimeFormat?: string;\n    private sub: Subscription;\n\n    private uidActivity: number;\n    private uidActivityCategory: number;\n\n    public isNew: boolean = false;\n    public isUpdate: boolean;\n\n    public fromCategory: boolean;\n    public fromActivity: boolean;\n\n    public listActivityCategory: Array<ActivityCategory>;\n    public listActivityUnassigned: Array<Activity>;\n\n    public selectedActivityCategoryAssignmentsUid : Array<number> = new Array<number>();\n\n    public activityCategoryAssignment: ActivityCategoryAssignment;\n\n    public listVesselTypes: Array<VesselType> = [];\n\n    public allSelected: boolean = false;\n\n    constructor(private router: Router,\n                private activeRoute: ActivatedRoute,\n                private activityCategoryAssignmentService :ActivityCategoryAssignmentService,\n                private activityCategoryService: ActivityCategoryService,\n                private activityService: ActivityService,\n                private notificationService: NotificationService){\n\n    }\n\n    ngOnInit(): void {\n        this.activityCategoryAssignment = new ActivityCategoryAssignment();\n        this.activityCategoryAssignment.activity = new Activity();\n        this.activityCategoryAssignment.activityCategory = new ActivityCategory();\n        this.activityCategoryAssignment.vesselTypesIds = [];\n\n        this.chargeListActivityCategory();\n        this.assignListVesselTypes();\n    }\n\n    public toggleCategoriesSelection(event) {\n        let checkbox = <HTMLInputElement> event.target;\n        this.allSelected = checkbox.checked;\n        this.selectedActivityCategoryAssignmentsUid = new Array();\n        for (let a of this.tableData) {\n            a.selected = this.allSelected;\n            if (this.allSelected)\n                this.selectedActivityCategoryAssignmentsUid.push(a.uid);\n        }\n    }\n\n    private chargeListActivityCategory(): void{\n        this.sub = this.activityCategoryService.getAll().subscribe((activityCategory) =>{\n            this.listActivityCategory = activityCategory;\n        });\n        // if(this.fromCategory){\n        //     this.sub = this.activityCategoryService.getAll().subscribe((activityCategory) =>{\n        //         this.listActivityCategory = activityCategory;\n        //     });\n        // }else if(this.fromActivity){\n        //     this.sub = this.activityCategoryAssignmentService.listCategoriesNotAssignedToActivity(this.uidActivity).subscribe((activityCategory)=>{\n        //         this.listActivityCategory = activityCategory;\n        //     });\n        // }\n\n    }\n\n    public cancelEdit() {\n        this.isNew = false;\n        this.isUpdate = false;\n        this.activityCategoryAssignment = new ActivityCategoryAssignment();\n    }\n\n    public changeToUpdate(activityCategoryAssignment: ActivityCategoryAssignment){\n        this.activityCategoryAssignment = activityCategoryAssignment;\n        this.isNew = false;\n        this.isUpdate = true;\n    }\n\n    public changeActivity(uidActivity){\n        this.activityService.getActivityById(uidActivity).subscribe((activity)=> {\n            this.activityCategoryAssignment.activity = activity;\n        }, (errors)=>{\n            console.log(errors);\n        });\n    }\n\n    public newActivity(){\n        this.activityCategoryAssignment = new ActivityCategoryAssignment();\n        this.activityCategoryAssignment.status = \"Active\";\n        this.activityCategoryAssignment.occurrences = 1;\n        this.activityCategoryAssignment.weight = 20;\n        this.activityCategoryAssignment.billable = false;\n        this.activityCategoryAssignment.mandatory = false;\n        this.activityCategoryAssignment.statementOfFact = false;\n        this.activityCategoryAssignment.ranged = false;\n        this.activityCategoryAssignment.activityCategory = new ActivityCategory();\n        this.activityCategoryAssignment.activity = new Activity();\n        this.activityCategoryAssignment.vesselTypesIds = [];\n\n        this.activityCategoryService.getActivityCategoryById(this.uidActivityCategory).subscribe((activiCategory)=>{\n            this.activityCategoryAssignment.activityCategory = activiCategory;\n        }, (errors)=>{\n            console.log(errors);\n        });\n        this.activityCategoryAssignmentService.listActivitiesNotAssignedToCategory(this.uidActivityCategory).subscribe((activityCategoryAssignments) => {\n            this.listActivityUnassigned = activityCategoryAssignments;\n        });\n\n        this.isNew = true;\n        this.isUpdate = false;\n    }\n\n    public activeDeactiveActivityCategoryAssignments(){\n        this.activityCategoryAssignmentService.toggleActivityCategoryAssignmentsStatus(this.selectedActivityCategoryAssignmentsUid, this.uidActivityCategory).subscribe(()=>{\n                this.fetchActivityCategoryAssignments();\n                this.notificationService.smallBox({\n                    title: \"Update Successful\",\n                    content: \"The Activity Category Assignment selection was successfully updated.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n            },\n            (errors) => {\n                console.log(errors);\n            }\n        );\n    }\n\n    public chargeListActivityUnassigned(uidActivityCategory){\n        this.uidActivityCategory = uidActivityCategory;\n        this.sub = this.activityCategoryAssignmentService.listActivitiesNotAssignedToCategory(this.uidActivityCategory).subscribe((activityCategoryAssignments) => {\n            this.listActivityUnassigned = activityCategoryAssignments;\n        });\n        this.fetchActivityCategoryAssignments();\n        this.activityCategoryService.getActivityCategoryById(uidActivityCategory).subscribe((activityCategory)=>{\n            this.activityCategoryAssignment.activityCategory = activityCategory;\n        }, (errors)=>{\n            console.log(errors);\n        });\n    }\n\n\n    private fetchActivityCategoryAssignments() {\n        this.sub = this.activityCategoryAssignmentService.getAllActivityCategoryAssignmentsByCategory(this.uidActivityCategory).subscribe((activityCategoryAssignments)=>{\n            this.tableData = activityCategoryAssignments;\n            this.selectedActivityCategoryAssignmentsUid = [];\n            this.isNew = false;\n            this.isUpdate = false;\n            this.allSelected = false;\n        });\n    }\n\n    public updateSelection(activityCategoryAssignmentUid: number, selected: boolean): void {\n        if (selected) {\n            this.selectedActivityCategoryAssignmentsUid.push(activityCategoryAssignmentUid);\n        } else {\n            let auxUidList : number[] = [];\n            for(let n of this.selectedActivityCategoryAssignmentsUid) {\n                if (n != activityCategoryAssignmentUid) {\n                    auxUidList.push(n);\n                }\n            }\n            this.selectedActivityCategoryAssignmentsUid = auxUidList;\n        }\n        this.allSelected = this.tableData.length == this.selectedActivityCategoryAssignmentsUid.length;\n    }\n\n    public deleteActivityCategoryAssignment(uidActivityCategoryAssignment: number){\n        this.notificationService.smartMessageBox({\n            title:\"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion\",\n            content:\"Do you wish to Delete this record\",\n            buttons:\"[Cancel][OK]\"\n        }, (button) =>{\n            if(button == \"OK\"){\n                this.sub = this.activityCategoryAssignmentService.deleteActivityCategoryAssignment(uidActivityCategoryAssignment, this.uidActivityCategory).subscribe(()=>{\n                    this.notificationService.smallBox({\n                        title: \"Deletion Successful\",\n                        content: \"The Activity-Category was successfully deleted.\",\n                        color: \"#739E73\",\n                        timeout: 5000,\n                        icon: \"fa fa-check\"\n                    });\n                    this.fetchActivityCategoryAssignments();\n                }, (errors) =>{\n                    console.log(errors);\n                    if(errors.status === 409){\n                        this.notificationService.smallBox({\n                            title: \"Record cannot be Deleted\",\n                            content: errors.error,\n                            color: \"#C46A69\",\n                            timeout: 5000,\n                            icon: \"fa fa-warning\"\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    public submitActivityCategoryAssignment(){\n        if(this.isNew){\n            this.activityCategoryAssignment.prepareData();\n            this.sub = this.activityCategoryAssignmentService.createActivityCategoryAssignment(this.activityCategoryAssignment, this.uidActivityCategory).subscribe(()=>{\n                this.fetchActivityCategoryAssignments();\n                this.notificationService.smallBox({\n                    title: \"Record Added\",\n                    content: \"New Activity successfully assigned to Category.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n            }, (errors) =>{\n                console.log(errors);\n            });\n            this.isNew = false;\n        }\n        if(this.isUpdate){\n            this.activityCategoryAssignment.prepareData();\n            this.sub = this.activityCategoryAssignmentService.updateActivityCategoryAssignment(this.activityCategoryAssignment, this.uidActivityCategory).subscribe(()=>{\n                this.fetchActivityCategoryAssignments();\n                this.notificationService.smallBox({\n                    title: \"Record Updated\",\n                    content: \"Activity-Category assignment successfully updated\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n            }, (errors) =>{\n                console.log(errors);\n            });\n            this.isUpdate = false;\n        }\n    }\n\n    private assignListVesselTypes() {\n        this.listVesselTypes = [];\n        this.sub = this.activityCategoryAssignmentService.getVesselTypes().subscribe((vesselTypes)=>{\n            for (let vt of vesselTypes) {\n                this.listVesselTypes.push(new VesselType(vt));\n            }\n        });\n\n    }\n\n    public cancel(){\n        let returnUrl = this.activeRoute.snapshot.queryParams['origin'];\n        if (returnUrl == 'activities') {\n            this.router.navigate(['maintenance','activity','activity-list']);\n        } else {\n            this.router.navigate(['maintenance',    'activity','activity-category-list']);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/activity/activity-to-activity-category/activity-to-activity-category.component.ts","import {Component, OnInit, Inject, ViewChild} from \"@angular/core\";\nimport {ActivityService} from \"../../../services/maintenance/activity.service\";\nimport {Activity} from \"../../../models/Activity\";\nimport {Subscription} from \"rxjs\";\nimport {AppProperties} from \"../../../app.properties\";\nimport {NotificationService} from \"../../../shared/utils/notification.service\";\nimport {Router, ActivatedRoute} from \"@angular/router\";\nimport {BaseComponent} from \"../../../shared/component/base.component\";\nimport {BaseFormComponent} from \"../../../shared/component/form/base-form.component\";\n\n@Component({\n    selector: 'activity-list',\n    template: require('./activity-list-component.html'),\n    providers: [ActivityService],\n})\n\nexport class ActivityListComponent extends BaseFormComponent implements OnInit{\n\n    public filterQuery = \"\";\n    public tableData: Activity[] = [];\n    public dateTimeFormat?: string;\n    private sub: Subscription;\n    public selectedActivitiesUid : Array<number> = new Array<number>();\n    public activity : Activity = new Activity();\n    public allSelected: boolean = false;\n    public isNewActivity: boolean = false;\n\n    public isUpdateActivity: boolean = false;\n\n\n    constructor(private activityService: ActivityService,private router: Router,\n                private activeRoute: ActivatedRoute,\n                @Inject(AppProperties) appProps: AppProperties,\n                private notificationService: NotificationService) {\n        super();\n        this.dateTimeFormat = appProps.get(AppProperties.DEFAULT_DATE_TIME_FORMAT_KEY);\n    }\n\n    ngOnInit(): void {\n        this.fetchActivities();\n    }\n\n    public toggleActivitiesSelection(event) {\n        let checkbox = <HTMLInputElement> event.target;\n        this.allSelected = checkbox.checked;\n        this.selectedActivitiesUid = new Array();\n        for (let a of this.tableData) {\n            a.selected = this.allSelected;\n            if (this.allSelected)\n                this.selectedActivitiesUid.push(a.uid);\n        }\n    }\n\n    public createNewActivity(){\n        this.cancelEdit();\n        this.isNewActivity = true;\n        this.activity.status = \"Active\";\n    }\n\n    public submitActivity(){\n        if (this.isNewActivity){\n            this.sub = this.activityService.createActivity(this.activity).subscribe((activity) =>{\n                this.fetchActivities();\n                this.notificationService.smallBox({\n                    title: \"Record Added\",\n                    content: \"The Activity was successfully added.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n                this.cancelEdit();\n            }, (errors) =>{\n                this.handleErrors(errors);\n                console.log(errors);\n            });\n        }\n        if (this.isUpdateActivity){\n            this.sub = this.activityService.updateActivity(this.activity).subscribe((activity) =>{\n                this.fetchActivities();\n                this.notificationService.smallBox({\n                    title: \"Record Updated\",\n                    content: \"The Activity was successfully updated.\",\n                    color: \"#739E73\",\n                    timeout: 5000,\n                    icon: \"fa fa-check\"\n                });\n                this.cancelEdit();\n            }, (errors) =>{\n                this.handleErrors(errors);\n                console.log(errors);\n            });\n        }\n    }\n\n    public handleErrors(errors: any) {\n        super.handleErrors(errors);\n        if (this.formErrors.description) {\n            this.formErrors.activityDescription = this.formErrors.description;\n        }\n    }\n\n    public cancelEdit() {\n        this.isUpdateActivity = false;\n        this.isNewActivity = false;\n        this.activity = new Activity();\n        this.formErrors = {};\n    }\n\n    public updateActivity(activity: Activity) {\n        this.cancelEdit();\n        this.isUpdateActivity = true;\n        this.activity = activity;\n    }\n\n    public deleteActivity(uidActivity: number){\n        this.notificationService.smartMessageBox({\n            title:\"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion\",\n            content:\"Do you wish to Delete this record\",\n            buttons:\"[Cancel][OK]\"\n        }, (button) =>{\n            if(button == \"OK\"){\n                this.sub = this.activityService.deleteActivity(uidActivity).subscribe(()=>{\n                    this.notificationService.smallBox({\n                        title: \"Deletion Successful\",\n                        content: \"The Activity was successfully deleted.\",\n                        color: \"#739E73\",\n                        timeout: 5000,\n                        icon: \"fa fa-check\"\n                    });\n                    this.fetchActivities();\n                }, (errors) =>{\n                    console.log(errors);\n                    if(errors.status === 409){\n                        this.notificationService.smallBox({\n                            title: \"Record cannot be Deleted\",\n                            content: errors.error,\n                            color: \"#C46A69\",\n                            timeout: 5000,\n                            icon: \"fa fa-warning\"\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    public activeDeactiveActivities(){\n        this.activityService.toggleActivityStatus(this.selectedActivitiesUid).subscribe(()=>{\n            this.notificationService.smallBox({\n                title: \"Update Successful\",\n                content: \"The Activity selection was successfully updated.\",\n                color: \"#739E73\",\n                timeout: 5000,\n                icon: \"fa fa-check\"\n            });\n            this.fetchActivities();\n        },\n            (errors) => {\n                console.log(errors);\n            }\n        );\n    }\n\n    public assignToCategory(){\n        // let uidActivity : number = this.selectedActivitiesUid[0];\n        this.router.navigate(['maintenance','activity', 'activity-to-activity-category'], {queryParams: { origin: 'activities'}})\n    }\n\n    private fetchActivities() {\n        this.sub = this.activityService.getAll().subscribe((activities) => {\n            this.tableData = activities;\n        });\n        this.selectedActivitiesUid = new Array();\n        this.isNewActivity = false;\n        this.isUpdateActivity = false;\n        this.allSelected = false;\n    }\n\n    public updateSelection(activityUid: number, selected: boolean): void {\n        if (selected) {\n            this.selectedActivitiesUid.push(activityUid);\n        } else {\n            let auxUidList : number[] = [];\n            for(let n of this.selectedActivitiesUid) {\n                if (n != activityUid) {\n                    auxUidList.push(n);\n                }\n            }\n            this.selectedActivitiesUid = auxUidList;\n        }\n        this.allSelected = this.tableData.length == this.selectedActivitiesUid.length;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/activity/list/activity-list.component.ts","import {Injectable, Inject} from \"@angular/core\";\nimport {AbstractService} from \"../abstract-service\";\nimport {Http, Response} from \"@angular/http\";\nimport {AppProperties} from \"../../app.properties\";\nimport {Observable} from \"rxjs\";\nimport {Activity} from \"../../models/Activity\";\n\n@Injectable()\nexport class ActivityService extends AbstractService {\n\n    constructor(private http: Http, @Inject(AppProperties) appProps: AppProperties) {\n        super(appProps);\n    }\n\n    public getAll(): Observable<Array<Activity>>{\n        return this.http.get(this.apiBaseUrl + '/activities', this.getStandardRequestOptions())\n            .map(this.extractMany)\n            .catch(this.handleError);\n    }\n\n    private extractOne(res: Response): Activity {\n        return (res.json() || {}) as Activity;\n    }\n\n    private extractMany(res: Response): Activity[] {\n        return (res.json() || {}) as Activity[];\n    }\n\n    public createActivity(activity: Activity): Observable<Activity> {\n        return this.http.post(this.apiBaseUrl + '/activities',activity, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n\n    public deleteActivity(uidActivity: number): Observable<any>{\n        return this.http.delete(this.apiBaseUrl + '/activities/' + uidActivity, this.getStandardRequestOptions())\n            .map((res: Response) => {\n                return true;\n            })\n            .catch(this.handleError);\n\n    }\n\n    public handleError(error: Response){\n        if(error.status == 409){\n            return Observable.throw({error:\"The Activity has already been associated with Categories\", status: error.status});\n        }else{\n            return super.handleError(error);\n        }\n    }\n\n    public getActivityById(activityUid: number): Observable<Activity> {\n        return this.http.get(this.apiBaseUrl + '/activities/' + activityUid, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n\n    public updateActivity(activity: Activity): Observable<Activity> {\n        return this.http.put(this.apiBaseUrl + '/activities/'+ activity.uid,activity, this.getStandardRequestOptions())\n            .map(this.extractOne)\n            .catch(this.handleError);\n    }\n\n    public toggleActivityStatus(activitiesUid: number[]): Observable<any>{\n        return this.http.post(this.apiBaseUrl + '/activities/activity-status/toggle',activitiesUid, this.getStandardRequestOptions())\n            .catch(this.handleError);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/services/maintenance/activity.service.ts","import {NgModule} from \"@angular/core\";\nimport {ActivityListComponent} from \"./list/activity-list.component\";\nimport {routing} from \"./activity.routing\";\nimport {SmartadminModule} from \"../../shared/smartadmin.module\";\nimport {SmartadminDatatableModule} from \"../../shared/ui/datatable/smartadmin-datatable.module\";\nimport {SmartadminInputModule} from \"../../shared/forms/input/smartadmin-input.module\";\nimport {AdvantumInputModule} from \"../../shared/forms/advantum-input/advantum-input.module\";\nimport {AdvantumCommonsModule} from \"../../shared/common/advantum-commons.module\";\nimport {ActivityCategoryListComponent} from \"./activity-category/activity-category-list.component\";\nimport {ActivityToActivityCategoryComponent} from \"./activity-to-activity-category/activity-to-activity-category.component\";\n\n@NgModule({\n    declarations: [\n        ActivityListComponent,\n        ActivityCategoryListComponent,\n        ActivityToActivityCategoryComponent,\n    ],\n\n    imports: [\n        routing,\n        SmartadminModule,\n        SmartadminDatatableModule,\n        SmartadminInputModule,\n        AdvantumInputModule,\n        AdvantumCommonsModule,\n    ],\n\n    providers: [],\n})\nexport class ActivityModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/activity/activity.module.ts","import {Routes, RouterModule} from \"@angular/router\";\nimport {ActivityListComponent} from \"./list/activity-list.component\";\nimport {ActivityCategoryListComponent} from \"./activity-category/activity-category-list.component\";\nimport {ActivityToActivityCategoryComponent} from \"./activity-to-activity-category/activity-to-activity-category.component\";\n\nexport const routes: Routes = [\n\n    { path: 'activity-list', component: ActivityListComponent, data: { pageTitle: 'Activity' } },\n    { path: 'activity-category-list', component: ActivityCategoryListComponent, data: { pageTitle: 'Activity Category' } },\n    { path: 'activity-to-activity-category', component: ActivityToActivityCategoryComponent, data: { pageTitle: 'Activity-Category Assignment' } },\n\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/activity/activity.routing.ts","module.exports = \"<div id=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-9 col-md-9 col-lg-9\\\">\\n            <h1 class=\\\"page-title txt-color-blueDark\\\">\\n\\n                <!-- PAGE HEADER -->\\n                <sa-big-breadcrumbs [items]=\\\"['Activity Category']\\\" icon=\\\"users\\\"\\n                                    class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-7\\\"></sa-big-breadcrumbs>\\n            </h1>\\n        </div>\\n\\n        <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\n            <!-- Button trigger modal -->\\n            <a href=\\\"javascript:void(0);\\\" (click)=\\\"createNewActivityCategory()\\\" class=\\\"btn btn-success btn-lg pull-right header-btn hidden-mobile\\\">{{ 'Create New Category' }}</a>\\n        </div>\\n    </div>\\n    <section id=\\\"widget-grid\\\" class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n            <section id=\\\"widget-grid-2\\\" class=\\\"col-xs-12\\\">\\n                <div class=\\\"row\\\">\\n                    <article class=\\\"col-xs-12\\\">\\n                        <sa-widget [editbutton]=\\\"false\\\" color=\\\"blueDark\\\">\\n                            <header>\\n                                <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-table\\\"></i> </span>\\n                                <h2>Search Results </h2>\\n                            </header>\\n                            <div>\\n                                <div class=\\\"widget-body no-padding\\\">\\n                                    <table class=\\\"table table-bordered table-striped\\\"\\n                                           [mfData]=\\\"tableData | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\"\\n                                           [mfRowsOnPage]=\\\"5\\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th colspan=\\\"10\\\">\\n                                                    Filter by activity name:\\n                                                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\"\\n                                                           placeholder=\\\"Search activity name\\\"/>\\n                                                </th>\\n                                            </tr>\\n                                            <tr>\\n                                                <th class=\\\"text-center\\\">\\n                                                    <label>\\n                                                        <input [(ngModel)]=\\\"allSelected\\\" name=\\\"selectAll\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"toggleCategoriesSelection($event)\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"name\\\">Category Name</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"description\\\">Category Description</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"status\\\">Status</mfDefaultSorter>\\n                                                </th>\\n                                                <th></th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let obj of mf.data; let rowIndex = index\\\" [ngClass]=\\\"{'bg-color-white': rowIndex % 2 == 1}\\\">\\n                                                <td class=\\\"text-center\\\">\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input *ngIf=\\\"activityCategory!=obj\\\" [(ngModel)]=\\\"obj.selected\\\" name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"updateSelection(obj.uid,$event.target.checked)\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"activityCategory!=obj\\\">\\n                                                        {{ obj.name }}\\n                                                    </span>\\n                                                    <input *ngIf=\\\"activityCategory==obj\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                                  name=\\\"activityName\\\" id=\\\"activityName\\\"\\n                                                                  [(ngModel)]=\\\"activityCategory.name\\\" required>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"activityCategory!=obj\\\">\\n                                                        {{ obj.description }}\\n                                                    </span>\\n                                                    <input *ngIf=\\\"activityCategory==obj\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                           name=\\\"description\\\" id=\\\"description\\\"\\n                                                           [(ngModel)]=\\\"activityCategory.description\\\" required>\\n                                                </td>\\n                                                <td>\\n                                                    <div>\\n                                                        <span *ngIf=\\\"activityCategory!=obj\\\" [ngSwitch]=\\\"obj.status\\\">\\n                                                            <span *ngSwitchCase=\\\"'Active'\\\"\\n                                                                  class=\\\"font-sm label label-success\\\">Active</span>\\n                                                            <span *ngSwitchCase=\\\"'Inactive'\\\"\\n                                                                  class=\\\"font-sm label label-warning\\\">Inactive</span>\\n                                                        </span>\\n                                                        <select *ngIf=\\\"activityCategory==obj\\\" name=\\\"userStatus\\\"\\n                                                                [(ngModel)]=\\\"activityCategory.status\\\"\\n                                                                class=\\\"form-control\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                            <option value=\\\"Active\\\" selected>Active</option>\\n                                                            <option value=\\\"Inactive\\\">Inactive</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </td>\\n                                                <td>\\n                                                    <a *ngIf=\\\"activityCategory!=obj\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateActivityCategory(obj)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                                    <a *ngIf=\\\"activityCategory!=obj\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteActivityCategory(obj.uid)\\\"><i class=\\\"fa  fa-trash-o\\\"></i></a>\\n                                                    <button *ngIf=\\\"activityCategory==obj\\\" type=\\\"button\\\"\\n                                                            class=\\\"btn btn-primary\\\" (click)=\\\"submitActivityCategory()\\\" [disabled]=\\\"!activityCategory.name || !activityCategory.description || !activityCategory.status\\\">Save\\n                                                    </button>\\n                                                    <button *ngIf=\\\"activityCategory==obj\\\" type=\\\"button\\\"\\n                                                            class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                            <tr *ngIf=\\\"isNewActivityCategory\\\">\\n                                                <td class=\\\"text-center\\\">\\n                                                </td>\\n                                                <td>\\n                                                    <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                           name=\\\"activityName\\\" id=\\\"activityName\\\"\\n                                                           [(ngModel)]=\\\"activityCategory.name\\\" required>\\n                                                </td>\\n                                                <td>\\n                                                    <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                           name=\\\"description\\\" id=\\\"description\\\"\\n                                                           [(ngModel)]=\\\"activityCategory.description\\\" required>\\n                                                </td>\\n                                                <td>\\n                                                    <div>\\n                                                        <select name=\\\"userStatus\\\"\\n                                                                [(ngModel)]=\\\"activityCategory.status\\\"\\n                                                                class=\\\"form-control\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                            <option value=\\\"Active\\\" selected>Active</option>\\n                                                            <option value=\\\"Inactive\\\">Inactive</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </td>\\n                                                <td>\\n                                                    <button type=\\\"button\\\"\\n                                                            class=\\\"btn btn-primary\\\" (click)=\\\"submitActivityCategory()\\\" [disabled]=\\\"!activityCategory.name || !activityCategory.description || !activityCategory.status\\\">Save\\n                                                    </button>\\n                                                    <button type=\\\"button\\\"\\n                                                            class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                        <tfoot>\\n                                            <tr>\\n                                                <td colspan=\\\"10\\\">\\n                                                    <mfBootstrapPaginator\\n                                                            [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n                                                </td>\\n                                            </tr>\\n                                        </tfoot>\\n                                    </table>\\n                                    <div class=\\\"form-actions\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-sm-6\\\">\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-sm-12 text-left\\\">\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn btn-default btn-lg\\\" (click)=\\\"activeDeactiveActivities()\\\" [disabled]=\\\"selectedActivityCategoriesUid.length == 0\\\">Activate/Deactivate\\n                                                        </button>\\n                                                    </div>\\n\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-sm-6\\\">\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-xs-12 text-right\\\">\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn btn-default btn-lg\\\" (click)=\\\"assignActivities()\\\">Assign Activities\\n                                                        </button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </sa-widget>\\n                    </article>\\n                </div>\\n            </section>\\n        </div>\\n    </section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/activity/activity-category/activity-category-list.component.html\n// module id = 2432\n// module chunks = 60","module.exports = \"<div id=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-9 col-md-9 col-lg-9\\\">\\n            <h1 class=\\\"page-title txt-color-blueDark\\\">\\n\\n                <!-- PAGE HEADER -->\\n                <sa-big-breadcrumbs [items]=\\\"['Activity-Category Assignment']\\\" icon=\\\"users\\\"\\n                                    class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-7\\\"></sa-big-breadcrumbs>\\n            </h1>\\n        </div>\\n    </div>\\n\\n    <section id=\\\"widget-grid\\\" class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n            <section id=\\\"widget-grid-2\\\" class=\\\"col-xs-12\\\">\\n                <div class=\\\"row\\\">\\n                    <article class=\\\"col-xs-12\\\">\\n                        <sa-widget [editbutton]=\\\"false\\\" color=\\\"blueDark\\\">\\n                            <header>\\n                                <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-table\\\"></i> </span>\\n                                <h2>Search Results </h2>\\n                            </header>\\n                            <div>\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-4\\\">\\n                                        <div class=\\\"form-group\\\" >\\n                                            <label class=\\\"control-label\\\"> Category <span class=\\\"text-danger required-field-marker\\\">*</span></label>\\n                                            <div class=\\\"input\\\">\\n                                                <select name=\\\"categoryList\\\"\\n                                                        class=\\\"form-control\\\" [(ngModel)]=\\\"uidActivityCategory\\\"\\n                                                        (onSelection)=\\\"chargeListActivityUnassigned($event)\\\"\\n                                                        [advComboBox]=\\\"{ placeholder: 'Select a Category' }\\\">\\n                                                    <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                    <option *ngFor=\\\"let option of listActivityCategory\\\" [ngValue]=\\\"option.uid\\\">{{option.name}}</option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"widget-body no-padding\\\">\\n                                    <table class=\\\"table table-bordered table-striped\\\"\\n                                           [mfData]=\\\"tableData | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\"\\n\\n                                           [mfRowsOnPage]=\\\"5\\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th colspan=\\\"11\\\">\\n                                                    Filter by activity name:\\n                                                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\"\\n                                                           placeholder=\\\"Search activity name\\\"/>\\n                                                </th>\\n                                            </tr>\\n                                            <tr>\\n                                                <th class=\\\"text-center\\\">\\n                                                    <label>\\n                                                        <input [(ngModel)]=\\\"allSelected\\\" name=\\\"selectAll\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"toggleCategoriesSelection($event)\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"name\\\">Activity Name</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"vesselTypesString\\\">Vessel Type</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"weight\\\">Weight</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"occurrences\\\">Occurences</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"ranged\\\">Ranged</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"mandatory\\\">Mandatory</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"billable\\\">Billable</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"statementOfFact\\\">SOF</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"status\\\">Status</mfDefaultSorter>\\n                                                </th>\\n                                                <th></th>\\n                                             </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let obj of mf.data; let rowIndex = index\\\" [ngClass]=\\\"{'bg-color-white': rowIndex % 2 == 1}\\\">\\n                                                <td class=\\\"text-center\\\">\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input *ngIf=\\\"activityCategoryAssignment != obj\\\" [(ngModel)]=\\\"obj.selected\\\" name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"updateSelection(obj.uid,$event.target.checked)\\\" />\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>{{obj.activity.name}}</td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"activityCategoryAssignment != obj\\\">\\n                                                        <span *ngIf=\\\"obj.vesselTypes.length == 1\\\">\\n                                                            {{obj.vesselTypes[0].description}}\\n                                                        </span>\\n                                                        <span *ngIf=\\\"obj.vesselTypes.length > 1\\\">\\n                                                            Multiple\\n                                                        </span>\\n                                                    </span>\\n                                                    <select *ngIf=\\\"activityCategoryAssignment == obj\\\" required name=\\\"vesselType\\\" multiple=\\\"multiple\\\" id=\\\"multiselect\\\" class=\\\"form-control custom-scroll col-sm-12\\\"\\n                                                            title=\\\"Click to Select a Vessel Type\\\"\\n                                                            [(ngModel)]=\\\"activityCategoryAssignment.vesselTypesIds\\\">\\n                                                        <option *ngFor=\\\"let vesselType of listVesselTypes\\\" [ngValue]=\\\"vesselType.uid\\\" >{{vesselType.description}}</option>\\n                                                    </select>\\n                                                </td>\\n\\n                                                <td>\\n                                                    <span *ngIf=\\\"activityCategoryAssignment != obj\\\">{{obj.weight}}</span>\\n                                                    <input *ngIf=\\\"activityCategoryAssignment == obj\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"20\\\"\\n                                                           name=\\\"weight\\\" required [(ngModel)]=\\\"activityCategoryAssignment.weight\\\">\\n                                                </td><td>\\n                                                    <span *ngIf=\\\"activityCategoryAssignment != obj\\\">{{obj.occurrences}}</span>\\n                                                    <input *ngIf=\\\"activityCategoryAssignment == obj\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\"\\n                                                           name=\\\"occurences\\\" required [(ngModel)]=\\\"activityCategoryAssignment.occurrences\\\">\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" [disabled]=\\\"activityCategoryAssignment != obj\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"obj.ranged\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" [disabled]=\\\"activityCategoryAssignment != obj\\\"  type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"obj.mandatory\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" [disabled]=\\\"activityCategoryAssignment != obj\\\"  type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"obj.billable\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" [disabled]=\\\"activityCategoryAssignment != obj\\\"  type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"obj.statementOfFact\\\"/>\\n                                                        <span></span>\\n                                                    </label></td>\\n                                                <td>\\n                                                    <div>\\n                                                        <span *ngIf=\\\"activityCategoryAssignment != obj\\\" [ngSwitch]=\\\"obj.status\\\">\\n                                                            <span *ngSwitchCase=\\\"'Active'\\\"\\n                                                                  class=\\\"font-sm label label-success\\\">Active</span>\\n                                                            <span *ngSwitchCase=\\\"'Inactive'\\\"\\n                                                                  class=\\\"font-sm label label-warning\\\">Inactive</span>\\n                                                        </span>\\n                                                        <select *ngIf=\\\"activityCategoryAssignment == obj\\\"  name=\\\"userStatus\\\"\\n                                                                class=\\\"form-control\\\" [(ngModel)]=\\\"obj.status\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                            <option value=\\\"Active\\\" selected>Active</option>\\n                                                            <option value=\\\"Inactive\\\">Inactive</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </td>\\n                                                <td>\\n                                                    <a *ngIf=\\\"activityCategoryAssignment != obj\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeToUpdate(obj)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                                    <a *ngIf=\\\"activityCategoryAssignment != obj\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteActivityCategoryAssignment(obj.uid)\\\"><i class=\\\"fa  fa-trash-o\\\"></i></a>\\n                                                    <button *ngIf=\\\"activityCategoryAssignment == obj\\\" type=\\\"button\\\"\\n                                                            class=\\\"btn btn-primary\\\" (click)=\\\"submitActivityCategoryAssignment()\\\" >Save\\n                                                    </button>\\n                                                    <button *ngIf=\\\"activityCategoryAssignment == obj\\\" type=\\\"button\\\"\\n                                                            class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                            <tr *ngIf=\\\"isNew\\\">\\n                                                <td class=\\\"text-center\\\"></td>\\n                                                <td>\\n                                                    <select name=\\\"activityList\\\" [advComboBox]=\\\"{ placeholder: 'Select an Activity' }\\\"\\n                                                            class=\\\"form-control\\\" [(ngModel)]=\\\"activityCategoryAssignment.activity.uid\\\"\\n                                                            (onSelection)=\\\"changeActivity($event)\\\"\\n                                                            required>\\n                                                        <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                        <option *ngFor=\\\"let activity of listActivityUnassigned\\\" [ngValue]=\\\"activity.uid\\\">{{activity.name}}</option>\\n                                                    </select>\\n                                                </td>\\n                                                <td>\\n                                                    <select required name=\\\"vesselType\\\" multiple=\\\"multiple\\\" id=\\\"multiselect\\\" class=\\\"form-control custom-scroll col-sm-12\\\"\\n                                                            title=\\\"Click to Select a Vessel Type\\\"\\n                                                            [(ngModel)]=\\\"activityCategoryAssignment.vesselTypesIds\\\">\\n                                                        <option *ngFor=\\\"let vesselType of listVesselTypes\\\" [ngValue]=\\\"vesselType.uid\\\" >{{vesselType.description}}</option>\\n                                                    </select>\\n                                                </td>\\n                                                <td>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"20\\\"\\n                                                           name=\\\"weight\\\" required [(ngModel)]=\\\"activityCategoryAssignment.weight\\\">\\n                                                </td><td>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\"\\n                                                           name=\\\"occurrences\\\" required [(ngModel)]=\\\"activityCategoryAssignment.occurrences\\\">\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"activityCategoryAssignment.ranged\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"activityCategoryAssignment.mandatory\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"activityCategoryAssignment.billable\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <label style=\\\"margin-bottom: 0;\\\">\\n                                                        <input name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"activityCategoryAssignment.statementOfFact\\\"/>\\n                                                        <span></span>\\n                                                    </label>\\n                                                </td>\\n                                                <td>\\n                                                    <div>\\n                                                        <select name=\\\"userStatus\\\"\\n                                                                class=\\\"form-control\\\" [(ngModel)]=\\\"activityCategoryAssignment.status\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                            <option value=\\\"Active\\\" selected>Active</option>\\n                                                            <option value=\\\"Inactive\\\">Inactive</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </td>\\n                                                <td>\\n                                                    <button type=\\\"button\\\"\\n                                                            class=\\\"btn btn-primary\\\" (click)=\\\"submitActivityCategoryAssignment()\\\" >Save\\n                                                    </button>\\n                                                    <button type=\\\"button\\\"\\n                                                            class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                    </button>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                        <tfoot>\\n                                        <tr>\\n                                            <td colspan=\\\"11\\\">\\n                                                <mfBootstrapPaginator\\n                                                        [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n                                            </td>\\n                                        </tr>\\n                                        </tfoot>\\n                                    </table>\\n                                    <div class=\\\"form-actions\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-sm-6\\\">\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-xs-12 text-left\\\">\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn btn-default btn-lg\\\"  (click)=\\\"newActivity()\\\" [disabled]=\\\"!uidActivityCategory\\\">Assign New Activity\\n                                                        </button>\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn btn-default btn-lg\\\" (click)=\\\"activeDeactiveActivityCategoryAssignments()\\\" [disabled]=\\\"!selectedActivityCategoryAssignmentsUid.length > 0\\\">Activate/Deactivate\\n                                                        </button>\\n                                                        <button type=\\\"button\\\" (click)=\\\"cancel()\\\"\\n                                                                class=\\\"btn btn-default btn-lg\\\">Cancel\\n                                                        </button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </sa-widget>\\n                    </article>\\n                </div>\\n            </section>\\n        </div>\\n    </section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/activity/activity-to-activity-category/activity-to-activity-category.component.html\n// module id = 2433\n// module chunks = 60","module.exports = \"<div id=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-9 col-md-9 col-lg-9\\\">\\n            <h1 class=\\\"page-title txt-color-blueDark\\\">\\n\\n                <!-- PAGE HEADER -->\\n                <sa-big-breadcrumbs [items]=\\\"['Activity']\\\" icon=\\\"users\\\"\\n                                    class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-7\\\"></sa-big-breadcrumbs>\\n            </h1>\\n        </div>\\n\\n        <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\n            <!-- Button trigger modal -->\\n            <a href=\\\"javascript:void(0);\\\" (click)=\\\"createNewActivity()\\\" class=\\\"btn btn-success btn-lg pull-right header-btn hidden-mobile\\\">{{ 'Create New Activity' }}</a>\\n        </div>\\n    </div>\\n\\n\\n    <section id=\\\"widget-grid\\\" class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n            <section id=\\\"widget-grid-2\\\" class=\\\"col-xs-12\\\">\\n                <div class=\\\"row\\\">\\n                    <article class=\\\"col-xs-12\\\">\\n                        <sa-widget [editbutton]=\\\"false\\\" color=\\\"blueDark\\\">\\n                            <header>\\n                                <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-table\\\"></i> </span>\\n                                <h2>Search Results </h2>\\n                            </header>\\n                            <div>\\n                                <div class=\\\"widget-body no-padding\\\">\\n                                    <form #mainForm=\\\"ngForm\\\" novalidate=\\\"novalidate\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                        <table class=\\\"table table-bordered table-striped\\\"\\n                                               [mfData]=\\\"tableData | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\"\\n                                               [mfRowsOnPage]=\\\"5\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <th colspan=\\\"10\\\">\\n                                                        Filter by activity name:\\n                                                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" name=\\\"filterQuery\\\"\\n                                                               placeholder=\\\"Search activity name\\\"/>\\n                                                    </th>\\n                                                </tr>\\n                                                <tr>\\n                                                    <th class=\\\"text-center\\\">\\n                                                        <label>\\n                                                            <input [(ngModel)]=\\\"allSelected\\\" name=\\\"selectAll\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"toggleActivitiesSelection($event)\\\"/>\\n                                                            <span></span>\\n                                                        </label>\\n                                                    </th>\\n                                                    <th>\\n                                                        <mfDefaultSorter by=\\\"name\\\">Activity Name</mfDefaultSorter>\\n                                                    </th>\\n                                                    <th>\\n                                                        <mfDefaultSorter by=\\\"description\\\">Activity Description</mfDefaultSorter>\\n                                                    </th>\\n                                                    <th>\\n                                                        <mfDefaultSorter by=\\\"status\\\">Status</mfDefaultSorter>\\n                                                    </th>\\n                                                    <th></th>\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let obj of mf.data; let rowIndex = index\\\" [ngClass]=\\\"{'bg-color-white': rowIndex % 2 == 1}\\\">\\n                                                    <td class=\\\"text-center\\\">\\n                                                        <label style=\\\"margin-bottom: 0;\\\">\\n                                                            <input *ngIf=\\\"activity != obj\\\" [(ngModel)]=\\\"obj.selected\\\" name=\\\"checkbox\\\" type=\\\"checkbox\\\" class=\\\"checkbox\\\" (click)=\\\"updateSelection(obj.uid,$event.target.checked)\\\"/>\\n                                                            <span></span>\\n                                                        </label>\\n                                                    </td>\\n                                                    <td>\\n                                                        <span>{{ obj.name }}</span>\\n                                                        <div *ngIf=\\\"activity == obj && formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                                                            {{ formErrors.name }}\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <span *ngIf=\\\"activity != obj\\\">{{ obj.description }}</span>\\n                                                        <input *ngIf=\\\"activity == obj\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                               name=\\\"description\\\" id=\\\"description\\\"\\n                                                               [(ngModel)]=\\\"activity.description\\\" required>\\n                                                        <div *ngIf=\\\"activity == obj && formErrors.activityDescription\\\" class=\\\"alert alert-danger\\\">\\n                                                            {{ formErrors.activityDescription }}\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <div>\\n                                                            <span *ngIf=\\\"activity != obj\\\" [ngSwitch]=\\\"obj.status\\\">\\n                                                                <span *ngSwitchCase=\\\"'Active'\\\"\\n                                                                      class=\\\"font-sm label label-success\\\">Active</span>\\n                                                                <span *ngSwitchCase=\\\"'Inactive'\\\"\\n                                                                      class=\\\"font-sm label label-warning\\\">Inactive</span>\\n                                                            </span>\\n                                                            <select *ngIf=\\\"activity == obj\\\" name=\\\"userStatus\\\"\\n                                                                    [(ngModel)]=\\\"activity.status\\\"\\n                                                                    class=\\\"form-control\\\">\\n                                                                <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                                <option value=\\\"Active\\\" selected>Active</option>\\n                                                                <option value=\\\"Inactive\\\">Inactive</option>\\n                                                            </select>\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <a *ngIf=\\\"activity != obj\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateActivity(obj)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                                                        <a *ngIf=\\\"activity != obj\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteActivity(obj.uid)\\\"><i class=\\\"fa  fa-trash-o\\\"></i></a>\\n                                                        <button *ngIf=\\\"activity == obj\\\" type=\\\"button\\\"\\n                                                                class=\\\"btn btn-primary\\\" (click)=\\\"submitActivity()\\\" [disabled]=\\\"!activity.name || !activity.description || !activity.status\\\">Save\\n                                                        </button>\\n                                                        <button *ngIf=\\\"activity == obj\\\" type=\\\"button\\\"\\n                                                                class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                        </button>\\n                                                    </td>\\n                                                </tr>\\n                                                <tr *ngIf=\\\"isNewActivity\\\">\\n                                                    <td class=\\\"text-center\\\">\\n                                                    </td>\\n                                                    <td>\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                               name=\\\"name\\\" id=\\\"activityName\\\"\\n                                                               [(ngModel)]=\\\"activity.name\\\" required>\\n                                                        <div *ngIf=\\\"formErrors.name\\\" class=\\\"alert alert-danger\\\">\\n                                                            {{ formErrors.name }}\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                               name=\\\"description\\\" id=\\\"description1\\\"\\n                                                               [(ngModel)]=\\\"activity.description\\\" required>\\n                                                        <div *ngIf=\\\"formErrors.activityDescription\\\" class=\\\"alert alert-danger\\\">\\n                                                            {{ formErrors.activityDescription }}\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <div>\\n                                                            <select name=\\\"userStatus\\\"\\n                                                                    [(ngModel)]=\\\"activity.status\\\"\\n                                                                    class=\\\"form-control\\\">\\n                                                                <option value=\\\"\\\" disabled=\\\"\\\">- Select -</option>\\n                                                                <option value=\\\"Active\\\" selected>Active</option>\\n                                                                <option value=\\\"Inactive\\\">Inactive</option>\\n                                                            </select>\\n                                                        </div>\\n                                                    </td>\\n                                                    <td>\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn btn-primary\\\" (click)=\\\"submitActivity()\\\" [disabled]=\\\"!activity.name || !activity.description || !activity.status\\\">Save\\n                                                        </button>\\n                                                        <button type=\\\"button\\\"\\n                                                                class=\\\"btn\\\" (click)=\\\"cancelEdit()\\\">Cancel\\n                                                        </button>\\n                                                    </td>\\n                                                </tr>\\n\\n                                            </tbody>\\n\\n                                            <tfoot>\\n                                            <tr>\\n                                                <td colspan=\\\"10\\\">\\n                                                    <mfBootstrapPaginator\\n                                                            [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n                                                </td>\\n                                            </tr>\\n                                            </tfoot>\\n                                        </table>\\n                                        <div class=\\\"form-actions\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-sm-6\\\">\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class=\\\"col-xs-12 text-left\\\">\\n                                                            <button type=\\\"button\\\"\\n                                                                        class=\\\"btn btn-default btn-lg\\\" (click)=\\\"activeDeactiveActivities()\\\" [disabled]=\\\"selectedActivitiesUid.length == 0\\\">Activate/Deactivate\\n                                                            </button>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"col-sm-6\\\">\\n                                                    <div class=\\\"row\\\">\\n                                                        <div class=\\\"col-xs-12 text-right\\\">\\n                                                            <button type=\\\"button\\\"\\n                                                                    class=\\\"btn btn-lg btn-default\\\" (click)=\\\"assignToCategory()\\\">Assign to Category\\n                                                            </button>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </sa-widget>\\n                    </article>\\n                </div>\\n            </section>\\n        </div>\\n    </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/activity/list/activity-list-component.html\n// module id = 2434\n// module chunks = 60"],"mappings":";;;;;;;AAAA;AAEA;AAAA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;AAlBA;AACA;AAkBA;AAAA;AApBA;;;;;;;;;;ACFA;AAEA;AAAA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;AAlBA;AACA;AAkBA;AAAA;AApBA;;;;;;;;;;ACFA;AACA;AACA;AAIA;AAAA;AA0BA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAvDA;AACA;AACA;AACA;AACA;AAqDA;AAAA;AA3DA;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAEA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAvEA;AADA;AAGA;AAAA;AAqEA;AAvEA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAvHA;AADA;AAGA;AAAA;AAqHA;AAvHA;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAcA;AAAA;AAAA;AAEA;AAdA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA/JA;AANA;AACA;AACA;AACA;AACA;AAiBA;AADA;AAiJA;AA/JA;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AA2BA;AAAA;AACA;AACA;AACA;AACA;AACA;AA9BA;AACA;AAOA;AASA;AAIA;AAEA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AApQA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6BA;AAyOA;AApQA;;;;;;;;;;;ACrBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAEA;AAfA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAQA;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjLA;AANA;AACA;AACA;AACA;AACA;AAkBA;AAFA;AAmKA;AAjLA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AAAA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA7DA;AADA;AAGA;AAAA;AA2DA;AA7DA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA;AAAA;AAEA;AAAA;AAAA;AAFA;AAlBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AAFA;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;ACbA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}