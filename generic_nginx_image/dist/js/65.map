{"version":3,"file":"js/65.chunk.js","sources":["webpack:///./src/app/+graphs/+chart-js/chart-js-showcase.component.ts","webpack:///./src/app/+graphs/+chart-js/chart-js-showcase.module.ts","webpack:///./src/app/+graphs/+chart-js/chart-js-showcase.routing.ts","webpack:///./src/app/shared/graphs/chart-js/chart-js.component.ts","webpack:///./src/app/shared/graphs/chart-js/chart-js.module.ts","webpack:///./src/app/shared/graphs/chart-js/chart-js.presets.ts","webpack:///./src/app/+graphs/+chart-js/chart-js-showcase.component.html"],"sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {JsonApiService} from \"../../core/api/json-api.service\";\nimport {FadeInTop} from \"../../shared/animations/fade-in-top.decorator\";\n\n@FadeInTop()\n@Component({\n  selector: 'sa-chart-js-showcase',\n  template: require('./chart-js-showcase.component.html'),\n})\nexport class ChartJsShowcaseComponent implements OnInit, OnDestroy {\n\n  public chartjsData: any;\n\n  constructor(private jsonApiService: JsonApiService) {}\n\n  ngOnInit() {\n    this.jsonApiService.fetch( '/graphs/chartjs.json').subscribe((data)=>{\n      this.chartjsData = data;\n    })\n  }\n\n  ngOnDestroy(){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+chart-js/chart-js-showcase.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { chartJsShowcaseRouting } from './chart-js-showcase.routing';\nimport { ChartJsShowcaseComponent } from './chart-js-showcase.component';\nimport {SmartadminModule} from \"../../shared/smartadmin.module\";\nimport {ChartJsModule} from \"../../shared/graphs/chart-js/chart-js.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    chartJsShowcaseRouting,\n    SmartadminModule,\n    ChartJsModule,\n  ],\n  declarations: [ChartJsShowcaseComponent]\n})\nexport class ChartJsShowcaseModule { }\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+chart-js/chart-js-showcase.module.ts","\nimport {ModuleWithProviders} from \"@angular/core\"\nimport { Routes, RouterModule } from '@angular/router';\nimport {ChartJsShowcaseComponent} from \"./chart-js-showcase.component\";\n\nexport const chartJsShowcaseRoutes: Routes = [\n  {\n    path: '',\n    component: ChartJsShowcaseComponent\n  }\n];\n\nexport const chartJsShowcaseRouting = RouterModule.forChild(chartJsShowcaseRoutes);\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+chart-js/chart-js-showcase.routing.ts","import {Component, AfterContentInit, ElementRef, Input} from '@angular/core';\n\nimport {presets} from './chart-js.presets'\n\ndeclare var Chart:any;\n\n@Component({\n\n  selector: 'sa-chart-js',\n  template: `\n    <div>\n      <canvas></canvas>\n    </div>\n  `,\n  styles: []\n})\nexport class ChartJsComponent implements AfterContentInit {\n\n  @Input() public data:any;\n  @Input() public type:string;\n  @Input() width:string = '100%';\n\n\n\n  constructor(private el:ElementRef) {\n  }\n\n  ngAfterContentInit() {\n    System.import('chart.js').then((chartJs:any)=> {\n        this.render()\n    })\n  }\n\n  render(){\n    let ctx = this.getCtx();\n    let data = this.data;\n\n    let chart = new Chart(ctx, {type: this.type, data: data, options: presets[this.type] || {}});\n    chart.update();\n\n  }\n\n  private getCtx() {\n    return this.el.nativeElement.querySelector('canvas').getContext('2d');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/shared/graphs/chart-js/chart-js.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartJsComponent } from './chart-js.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ChartJsComponent],\n  exports: [ChartJsComponent],\n})\nexport class ChartJsModule { }\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/shared/graphs/chart-js/chart-js.module.ts","export const presets = {\n  line: {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].lineColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n  },\n  radar: {\n    //Boolean - Whether to show lines for each scale point\n    scaleShowLine : true,\n    //Boolean - Whether we show the angle lines out of the radar\n    angleShowLineOut : true,\n    //Boolean - Whether to show labels on the scale\n    scaleShowLabels : false,\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero : true,\n    //String - Colour of the angle line\n    angleLineColor : \"rgba(0,0,0,.1)\",\n    //Number - Pixel width of the angle line\n    angleLineWidth : 1,\n    //String - Point label font declaration\n    pointLabelFontFamily : \"'Arial'\",\n    //String - Point label font weight\n    pointLabelFontStyle : \"normal\",\n    //Number - Point label font size in pixels\n    pointLabelFontSize : 10,\n    //String - Point label font colour\n    pointLabelFontColor : \"#666\",\n    //Boolean - Whether to show a dot for each point\n    pointDot : true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius : 3,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth : 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius : 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke : true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth : 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill : true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].lineColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n  },\n  polarArea: {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop : true,\n    //String - The colour of the label backdrop\n    scaleBackdropColor : \"rgba(255,255,255,0.75)\",\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero : true,\n    //Number - The backdrop padding above & below the label in pixels\n    scaleBackdropPaddingY : 2,\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX : 2,\n    //Boolean - Show line for each value in the scale\n    scaleShowLine : true,\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke : true,\n    //String - The colour of the stroke on each segement.\n    segmentStrokeColor : \"#fff\",\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth : 2,\n    //Number - Amount of animation steps\n    animationSteps : 100,\n    //String - Animation easing effect.\n    animationEasing : \"easeOutBounce\",\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate : true,\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale : false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n  },\n  bar: {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero : true,\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines : true,\n    //String - Colour of the grid lines\n    scaleGridLineColor : \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth : 1,\n    //Boolean - If there is a stroke on each bar\n    barShowStroke : true,\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth : 1,\n    //Number - Spacing between each of the X value sets\n    barValueSpacing : 5,\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing : 1,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].lineColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n  },\n  doughnut: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke : true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor : \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth : 2,\n    //Number - The percentage of the chart that we cut out of the middle\n    percentageInnerCutout : 50, // This is 0 for Pie charts\n    //Number - Amount of animation steps\n    animationSteps : 100,\n    //String - Animation easing effect\n    animationEasing : \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate : true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale : false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n  },\n  pie: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - types of animation\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/shared/graphs/chart-js/chart-js.presets.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\"  >\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs icon=\\\"bar-chart-o\\\" [items]=\\\"['Graphs', 'Chart.js']\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <sa-stats></sa-stats>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n    <div class=\\\"row\\\"  *ngIf=\\\"chartjsData\\\">\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Line Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"line\\\" [data]=\\\"chartjsData['line-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Radar Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"radar\\\" [data]=\\\"chartjsData['radar-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Polar Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"polarArea\\\" [data]=\\\"chartjsData['polar-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Bar Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"bar\\\" [data]=\\\"chartjsData['bar-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Doughnut Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"doughnut\\\" [data]=\\\"chartjsData['doughnut-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n            <h2>Pie Chart</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body\\\">\\n              <sa-chart-js type=\\\"pie\\\" [data]=\\\"chartjsData['pie-chart']\\\"></sa-chart-js>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n    </div>\\n  </sa-widgets-grid>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+graphs/+chart-js/chart-js-showcase.component.html\n// module id = 2349\n// module chunks = 65"],"mappings":";;;;;;;AAAA;AACA;AACA;AAOA;AAIA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAdA;AALA;AACA;AACA;AACA;AACA;AAKA;AAUA;AAdA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;ACdA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;ACZA;AAEA;AAcA;AAQA;AAAA;AAJA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AA5BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AAVA;AAEA;AACA;AAKA;AACA;AASA;AAsBA;AA9BA;;;;;;;;;;;AChBA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvKA;;;;A","sourceRoot":""}