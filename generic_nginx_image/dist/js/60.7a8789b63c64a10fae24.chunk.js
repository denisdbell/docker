webpackJsonp([60],{1564:function(t,e,i){"use strict";var n=i(345),s=function(t){function e(e){var i=t.call(this)||this;return e&&(i.uid=e.uid,i.name=e.name,i.description=e.description,i.status=e.status),i}return __extends(e,t),e.prototype.prepareData=function(){},e}(n.DomainObject);e.ActivityCategory=s},1570:function(t,e,i){"use strict";var n=i(345),s=function(t){function e(e){var i=t.call(this)||this;return e&&(i.uid=e.uid,i.name=e.name,i.description=e.description,i.status=e.status),i}return __extends(e,t),e.prototype.prepareData=function(){},e}(n.DomainObject);e.Activity=s},1595:function(t,e,i){"use strict";var n=i(345),s=i(1570),a=i(1564),o=function(t){function e(e){var i=t.call(this,e)||this;if(e){if(i.uid=e.uid,i.vesselTypes=e.vesselTypes,i.vesselTypes&&i.vesselTypes.length&&(1==i.vesselTypes.length?i.vesselTypesString=i.vesselTypes[0].description:i.vesselTypes.length>1&&(i.vesselTypesString="Multiple")),i.vesselTypesIds=[],e.vesselTypes)for(var n=0,o=e.vesselTypes;n<o.length;n++){var c=o[n];i.vesselTypesIds.push(c.uid)}i.activity=new s.Activity(e.activity),i.activityCategory=new a.ActivityCategory(e.activityCategory),i.weight=e.weight,i.occurrences=e.occurrences,i.ranged=e.ranged,i.mandatory=e.mandatory,i.billable=e.billable,i.statementOfFact=e.statementOfFact,i.status=e.status}return i}return __extends(e,t),e.prototype.prepareData=function(){this.vesselTypesIds&&(this.vesselTypes=this.vesselTypesIds)},e}(n.DomainObject);e.ActivityCategoryAssignment=o},1599:function(t,e,i){"use strict";var n=i(0),s=i(346),a=i(83),o=i(154),c=i(84),r=function(t){function e(e,i){var n=t.call(this,i)||this;return n.http=e,n}return __extends(e,t),e.prototype.getAll=function(){return this.http.get(this.apiBaseUrl+"/activity-categories",this.getStandardRequestOptions()).map(this.extractMany).catch(this.handleError)},e.prototype.getAllActive=function(){return this.http.get(this.apiBaseUrl+"/activity-categories?active=1",this.getStandardRequestOptions()).map(this.extractMany).catch(this.handleError)},e.prototype.getAllActiveActivityCategory=function(){return this.http.get(this.apiBaseUrl+"/activity-categories",this.getStandardRequestOptions()).map(this.extractMany).catch(this.handleError)},e.prototype.createActivityCategory=function(t){return this.http.post(this.apiBaseUrl+"/activity-categories",t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.deleteActivityCategory=function(t){return this.http.delete(this.apiBaseUrl+"/activity-categories/"+t,this.getStandardRequestOptions()).map(function(t){return!0}).catch(this.handleError)},e.prototype.handleError=function(e){return 409==e.status?c.Observable.throw({error:"The Activity Category has already been associated with Activities",status:e.status}):t.prototype.handleError.call(this,e)},e.prototype.updateActivityCategory=function(t){return this.http.put(this.apiBaseUrl+"/activity-categories/"+t.uid,t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.toggleActivityCategoryStatus=function(t){return this.http.post(this.apiBaseUrl+"/activity-categories/activity-category-status/toggle",t,this.getStandardRequestOptions()).catch(this.handleError)},e.prototype.getActivityCategoryById=function(t){return this.http.get(this.apiBaseUrl+"/activity-categories/"+t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.extractOne=function(t){return t.json()||{}},e.prototype.extractMany=function(t){return t.json()||{}},e}(s.AbstractService);r=__decorate([n.Injectable(),__param(1,n.Inject(o.AppProperties)),__metadata("design:paramtypes",["function"==typeof(l=void 0!==a.Http&&a.Http)&&l||Object,"function"==typeof(y=void 0!==o.AppProperties&&o.AppProperties)&&y||Object])],r),e.ActivityCategoryService=r;var l,y},1653:function(t,e,i){"use strict";var n=i(0),s=i(346),a=i(83),o=i(154),c=i(84),r=i(1595),l=i(1570),y=i(1564),d=i(1426),v=function(t){function e(e,i){var n=t.call(this,i)||this;return n.http=e,n}return __extends(e,t),e.prototype.listActivitiesNotAssignedToCategory=function(t){return this.http.get(this.apiBaseUrl+"/activities?activityCategory="+t,this.getStandardRequestOptions()).map(this.extractManyActivity).catch(this.handleError)},e.prototype.listCategoriesNotAssignedToActivity=function(t){return this.http.get(this.apiBaseUrl+"/activities-categories?"+t,this.getStandardRequestOptions()).map(this.extractManyActivityCategory).catch(this.handleError)},e.prototype.getAllActivityCategoryAssignmentsByCategory=function(t){return this.http.get(this.apiBaseUrl+"/activity-categories/"+t+"/assignments",this.getStandardRequestOptions()).map(this.extractMany).catch(this.handleError)},e.prototype.createActivityCategoryAssignment=function(t,e){return this.http.post(this.apiBaseUrl+"/activity-categories/"+e+"/assignments",t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.updateActivityCategoryAssignment=function(t,e){return this.http.put(this.apiBaseUrl+"/activity-categories/"+e+"/assignments/"+t.uid,t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.deleteActivityCategoryAssignment=function(t,e){return this.http.delete(this.apiBaseUrl+"/activity-categories/"+e+"/assignments/"+t,this.getStandardRequestOptions()).map(function(t){return!0}).catch(this.handleError)},e.prototype.toggleActivityCategoryAssignmentsStatus=function(t,e){return this.http.post(this.apiBaseUrl+"/activity-categories/"+e+"/assignments/activity-category-assignment-status/toggle",t,this.getStandardRequestOptions()).catch(this.handleError)},e.prototype.getVesselTypes=function(){return this.http.get(this.apiBaseUrl+"/vessel-types/",this.getStandardRequestOptions()).map(this.extractManyVesselType).catch(this.handleError)},e.prototype.handleError=function(e){return 409==e.status?c.Observable.throw({error:"The Activity has already been added to the Activity Log",status:e.status}):t.prototype.handleError.call(this,e)},e.prototype.extractOne=function(t){return new r.ActivityCategoryAssignment(t.json()||{})},e.prototype.extractMany=function(t){var e=[],i=t.json();return i&&i.forEach(function(t){e.push(new r.ActivityCategoryAssignment(t))}),e},e.prototype.extractManyVesselType=function(t){var e=[],i=t.json();return i&&i.forEach(function(t){e.push(new d.VesselType(t))}),e},e.prototype.extractManyActivity=function(t){var e=[],i=t.json();return i&&i.forEach(function(t){e.push(new l.Activity(t))}),e},e.prototype.extractManyActivityCategory=function(t){var e=[],i=t.json();return i&&i.forEach(function(t){e.push(new y.ActivityCategory(t))}),e},e}(s.AbstractService);v=__decorate([n.Injectable(),__param(1,n.Inject(o.AppProperties)),__metadata("design:paramtypes",["function"==typeof(g=void 0!==a.Http&&a.Http)&&g||Object,"function"==typeof(p=void 0!==o.AppProperties&&o.AppProperties)&&p||Object])],v),e.ActivityCategoryAssignmentService=v;var g,p},1806:function(t,e,i){"use strict";var n=i(1599),s=i(0),a=i(1564),o=i(154),c=i(85),r=i(33),l=function(){function t(t,e,i,n){this.activityCategoryService=t,this.router=e,this.notificationService=n,this.filterQuery="",this.tableData=[],this.selectedActivityCategoriesUid=new Array,this.activityCategory=new a.ActivityCategory,this.allSelected=!1,this.isNewActivityCategory=!1,this.isUpdateActivityCategory=!1,this.dateTimeFormat=i.get(o.AppProperties.DEFAULT_DATE_TIME_FORMAT_KEY)}return t.prototype.ngOnInit=function(){this.fetchActivityCategories()},t.prototype.toggleCategoriesSelection=function(t){var e=t.target;this.allSelected=e.checked,this.selectedActivityCategoriesUid=new Array;for(var i=0,n=this.tableData;i<n.length;i++){var s=n[i];s.selected=this.allSelected,this.allSelected&&this.selectedActivityCategoriesUid.push(s.uid)}},t.prototype.assignActivities=function(){this.router.navigateByUrl("/maintenance/activity/activity-to-activity-category")},t.prototype.createNewActivityCategory=function(){this.cancelEdit(),this.isNewActivityCategory=!0,this.activityCategory=new a.ActivityCategory,this.activityCategory.status="Active"},t.prototype.submitActivityCategory=function(){var t=this;this.isNewActivityCategory&&(this.sub=this.activityCategoryService.createActivityCategory(this.activityCategory).subscribe(function(e){t.fetchActivityCategories(),t.notificationService.smallBox({title:"Record Added",content:"The Activity Category was successfully added.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),t.cancelEdit()},function(t){console.log(t)})),this.isUpdateActivityCategory&&(this.sub=this.activityCategoryService.updateActivityCategory(this.activityCategory).subscribe(function(e){t.fetchActivityCategories(),t.notificationService.smallBox({title:"Record Updated",content:"The Activity Category was successfully updated.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),t.cancelEdit()},function(t){console.log(t)}))},t.prototype.cancelEdit=function(){this.isUpdateActivityCategory=!1,this.isNewActivityCategory=!1,this.activityCategory=new a.ActivityCategory},t.prototype.updateActivityCategory=function(t){this.cancelEdit(),this.isUpdateActivityCategory=!0,this.activityCategory=t},t.prototype.deleteActivityCategory=function(t){var e=this;this.notificationService.smartMessageBox({title:"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion",content:"Do you wish to Delete this record",buttons:"[Cancel][OK]"},function(i){"OK"==i&&(e.sub=e.activityCategoryService.deleteActivityCategory(t).subscribe(function(){e.notificationService.smallBox({title:"Deletion Successful",content:"The Activity Category was successfully deleted.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),e.fetchActivityCategories()},function(t){console.log(t),409===t.status&&e.notificationService.smallBox({title:"Record cannot be Deleted",content:t.error,color:"#C46A69",timeout:5e3,icon:"fa fa-warning"})}))})},t.prototype.activeDeactiveActivities=function(){var t=this;this.activityCategoryService.toggleActivityCategoryStatus(this.selectedActivityCategoriesUid).subscribe(function(){t.fetchActivityCategories()},function(t){console.log(t)})},t.prototype.fetchActivityCategories=function(){var t=this;this.sub=this.activityCategoryService.getAll().subscribe(function(e){t.tableData=e}),this.selectedActivityCategoriesUid=new Array,this.isNewActivityCategory=!1,this.isUpdateActivityCategory=!1,this.allSelected=!1},t.prototype.updateSelection=function(t,e){if(e)this.selectedActivityCategoriesUid.push(t);else{for(var i=[],n=0,s=this.selectedActivityCategoriesUid;n<s.length;n++){var a=s[n];a!=t&&i.push(a)}this.selectedActivityCategoriesUid=i}this.allSelected=this.tableData.length==this.selectedActivityCategoriesUid.length},t}();l=__decorate([s.Component({selector:"activity-category-list",template:i(2437),providers:[n.ActivityCategoryService]}),__param(2,s.Inject(o.AppProperties)),__metadata("design:paramtypes",["function"==typeof(y=void 0!==n.ActivityCategoryService&&n.ActivityCategoryService)&&y||Object,"function"==typeof(d=void 0!==r.Router&&r.Router)&&d||Object,"function"==typeof(v=void 0!==o.AppProperties&&o.AppProperties)&&v||Object,"function"==typeof(g=void 0!==c.NotificationService&&c.NotificationService)&&g||Object])],l),e.ActivityCategoryListComponent=l;var y,d,v,g},1807:function(t,e,i){"use strict";var n=i(0),s=i(33),a=i(1653),o=i(1570),c=i(1564),r=i(1599),l=i(1902),y=i(1595),d=i(85),v=i(1426),g=function(){function t(t,e,i,n,s,a){this.router=t,this.activeRoute=e,this.activityCategoryAssignmentService=i,this.activityCategoryService=n,this.activityService=s,this.notificationService=a,this.filterQuery="",this.tableData=[],this.isNew=!1,this.selectedActivityCategoryAssignmentsUid=new Array,this.listVesselTypes=[],this.allSelected=!1}return t.prototype.ngOnInit=function(){this.activityCategoryAssignment=new y.ActivityCategoryAssignment,this.activityCategoryAssignment.activity=new o.Activity,this.activityCategoryAssignment.activityCategory=new c.ActivityCategory,this.activityCategoryAssignment.vesselTypesIds=[],this.chargeListActivityCategory(),this.assignListVesselTypes()},t.prototype.toggleCategoriesSelection=function(t){var e=t.target;this.allSelected=e.checked,this.selectedActivityCategoryAssignmentsUid=new Array;for(var i=0,n=this.tableData;i<n.length;i++){var s=n[i];s.selected=this.allSelected,this.allSelected&&this.selectedActivityCategoryAssignmentsUid.push(s.uid)}},t.prototype.chargeListActivityCategory=function(){var t=this;this.sub=this.activityCategoryService.getAll().subscribe(function(e){t.listActivityCategory=e})},t.prototype.cancelEdit=function(){this.isNew=!1,this.isUpdate=!1,this.activityCategoryAssignment=new y.ActivityCategoryAssignment},t.prototype.changeToUpdate=function(t){this.activityCategoryAssignment=t,this.isNew=!1,this.isUpdate=!0},t.prototype.changeActivity=function(t){var e=this;this.activityService.getActivityById(t).subscribe(function(t){e.activityCategoryAssignment.activity=t},function(t){console.log(t)})},t.prototype.newActivity=function(){var t=this;this.activityCategoryAssignment=new y.ActivityCategoryAssignment,this.activityCategoryAssignment.status="Active",this.activityCategoryAssignment.occurrences=1,this.activityCategoryAssignment.weight=20,this.activityCategoryAssignment.billable=!1,this.activityCategoryAssignment.mandatory=!1,this.activityCategoryAssignment.statementOfFact=!1,this.activityCategoryAssignment.ranged=!1,this.activityCategoryAssignment.activityCategory=new c.ActivityCategory,this.activityCategoryAssignment.activity=new o.Activity,this.activityCategoryAssignment.vesselTypesIds=[],this.activityCategoryService.getActivityCategoryById(this.uidActivityCategory).subscribe(function(e){t.activityCategoryAssignment.activityCategory=e},function(t){console.log(t)}),this.activityCategoryAssignmentService.listActivitiesNotAssignedToCategory(this.uidActivityCategory).subscribe(function(e){t.listActivityUnassigned=e}),this.isNew=!0,this.isUpdate=!1},t.prototype.activeDeactiveActivityCategoryAssignments=function(){var t=this;this.activityCategoryAssignmentService.toggleActivityCategoryAssignmentsStatus(this.selectedActivityCategoryAssignmentsUid,this.uidActivityCategory).subscribe(function(){t.fetchActivityCategoryAssignments(),t.notificationService.smallBox({title:"Update Successful",content:"The Activity Category Assignment selection was successfully updated.",color:"#739E73",timeout:5e3,icon:"fa fa-check"})},function(t){console.log(t)})},t.prototype.chargeListActivityUnassigned=function(t){var e=this;this.uidActivityCategory=t,this.sub=this.activityCategoryAssignmentService.listActivitiesNotAssignedToCategory(this.uidActivityCategory).subscribe(function(t){e.listActivityUnassigned=t}),this.fetchActivityCategoryAssignments(),this.activityCategoryService.getActivityCategoryById(t).subscribe(function(t){e.activityCategoryAssignment.activityCategory=t},function(t){console.log(t)})},t.prototype.fetchActivityCategoryAssignments=function(){var t=this;this.sub=this.activityCategoryAssignmentService.getAllActivityCategoryAssignmentsByCategory(this.uidActivityCategory).subscribe(function(e){t.tableData=e,t.selectedActivityCategoryAssignmentsUid=[],t.isNew=!1,t.isUpdate=!1,t.allSelected=!1})},t.prototype.updateSelection=function(t,e){if(e)this.selectedActivityCategoryAssignmentsUid.push(t);else{for(var i=[],n=0,s=this.selectedActivityCategoryAssignmentsUid;n<s.length;n++){var a=s[n];a!=t&&i.push(a)}this.selectedActivityCategoryAssignmentsUid=i}this.allSelected=this.tableData.length==this.selectedActivityCategoryAssignmentsUid.length},t.prototype.deleteActivityCategoryAssignment=function(t){var e=this;this.notificationService.smartMessageBox({title:"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion",content:"Do you wish to Delete this record",buttons:"[Cancel][OK]"},function(i){"OK"==i&&(e.sub=e.activityCategoryAssignmentService.deleteActivityCategoryAssignment(t,e.uidActivityCategory).subscribe(function(){e.notificationService.smallBox({title:"Deletion Successful",content:"The Activity-Category was successfully deleted.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),e.fetchActivityCategoryAssignments()},function(t){console.log(t),409===t.status&&e.notificationService.smallBox({title:"Record cannot be Deleted",content:t.error,color:"#C46A69",timeout:5e3,icon:"fa fa-warning"})}))})},t.prototype.submitActivityCategoryAssignment=function(){var t=this;this.isNew&&(this.activityCategoryAssignment.prepareData(),this.sub=this.activityCategoryAssignmentService.createActivityCategoryAssignment(this.activityCategoryAssignment,this.uidActivityCategory).subscribe(function(){t.fetchActivityCategoryAssignments(),t.notificationService.smallBox({title:"Record Added",content:"New Activity successfully assigned to Category.",color:"#739E73",timeout:5e3,icon:"fa fa-check"})},function(t){console.log(t)}),this.isNew=!1),this.isUpdate&&(this.activityCategoryAssignment.prepareData(),this.sub=this.activityCategoryAssignmentService.updateActivityCategoryAssignment(this.activityCategoryAssignment,this.uidActivityCategory).subscribe(function(){t.fetchActivityCategoryAssignments(),t.notificationService.smallBox({title:"Record Updated",content:"Activity-Category assignment successfully updated",color:"#739E73",timeout:5e3,icon:"fa fa-check"})},function(t){console.log(t)}),this.isUpdate=!1)},t.prototype.assignListVesselTypes=function(){var t=this;this.listVesselTypes=[],this.sub=this.activityCategoryAssignmentService.getVesselTypes().subscribe(function(e){for(var i=0,n=e;i<n.length;i++){var s=n[i];t.listVesselTypes.push(new v.VesselType(s))}})},t.prototype.cancel=function(){"activities"==this.activeRoute.snapshot.queryParams.origin?this.router.navigate(["maintenance","activity","activity-list"]):this.router.navigate(["maintenance","activity","activity-category-list"])},t}();g=__decorate([n.Component({selector:"activity-to-activity-category",template:i(2438),providers:[a.ActivityCategoryAssignmentService,r.ActivityCategoryService,l.ActivityService,d.NotificationService]}),__metadata("design:paramtypes",["function"==typeof(p=void 0!==s.Router&&s.Router)&&p||Object,"function"==typeof(u=void 0!==s.ActivatedRoute&&s.ActivatedRoute)&&u||Object,"function"==typeof(h=void 0!==a.ActivityCategoryAssignmentService&&a.ActivityCategoryAssignmentService)&&h||Object,"function"==typeof(f=void 0!==r.ActivityCategoryService&&r.ActivityCategoryService)&&f||Object,"function"==typeof(b=void 0!==l.ActivityService&&l.ActivityService)&&b||Object,"function"==typeof(m=void 0!==d.NotificationService&&d.NotificationService)&&m||Object])],g),e.ActivityToActivityCategoryComponent=g;var p,u,h,f,b,m},1808:function(t,e,i){"use strict";var n=i(0),s=i(1902),a=i(1570),o=i(154),c=i(85),r=i(33),l=i(1423),y=function(t){function e(e,i,n,s,c){var r=t.call(this)||this;return r.activityService=e,r.router=i,r.activeRoute=n,r.notificationService=c,r.filterQuery="",r.tableData=[],r.selectedActivitiesUid=new Array,r.activity=new a.Activity,r.allSelected=!1,r.isNewActivity=!1,r.isUpdateActivity=!1,r.dateTimeFormat=s.get(o.AppProperties.DEFAULT_DATE_TIME_FORMAT_KEY),r}return __extends(e,t),e.prototype.ngOnInit=function(){this.fetchActivities()},e.prototype.toggleActivitiesSelection=function(t){var e=t.target;this.allSelected=e.checked,this.selectedActivitiesUid=new Array;for(var i=0,n=this.tableData;i<n.length;i++){var s=n[i];s.selected=this.allSelected,this.allSelected&&this.selectedActivitiesUid.push(s.uid)}},e.prototype.createNewActivity=function(){this.cancelEdit(),this.isNewActivity=!0,this.activity.status="Active"},e.prototype.submitActivity=function(){var t=this;this.isNewActivity&&(this.sub=this.activityService.createActivity(this.activity).subscribe(function(e){t.fetchActivities(),t.notificationService.smallBox({title:"Record Added",content:"The Activity was successfully added.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),t.cancelEdit()},function(e){t.handleErrors(e),console.log(e)})),this.isUpdateActivity&&(this.sub=this.activityService.updateActivity(this.activity).subscribe(function(e){t.fetchActivities(),t.notificationService.smallBox({title:"Record Updated",content:"The Activity was successfully updated.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),t.cancelEdit()},function(e){t.handleErrors(e),console.log(e)}))},e.prototype.handleErrors=function(e){t.prototype.handleErrors.call(this,e),this.formErrors.description&&(this.formErrors.activityDescription=this.formErrors.description)},e.prototype.cancelEdit=function(){this.isUpdateActivity=!1,this.isNewActivity=!1,this.activity=new a.Activity,this.formErrors={}},e.prototype.updateActivity=function(t){this.cancelEdit(),this.isUpdateActivity=!0,this.activity=t},e.prototype.deleteActivity=function(t){var e=this;this.notificationService.smartMessageBox({title:"<i class='fa fa-warning txt-color-orangeDark'></i>Confirm Deletion",content:"Do you wish to Delete this record",buttons:"[Cancel][OK]"},function(i){"OK"==i&&(e.sub=e.activityService.deleteActivity(t).subscribe(function(){e.notificationService.smallBox({title:"Deletion Successful",content:"The Activity was successfully deleted.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),e.fetchActivities()},function(t){console.log(t),409===t.status&&e.notificationService.smallBox({title:"Record cannot be Deleted",content:t.error,color:"#C46A69",timeout:5e3,icon:"fa fa-warning"})}))})},e.prototype.activeDeactiveActivities=function(){var t=this;this.activityService.toggleActivityStatus(this.selectedActivitiesUid).subscribe(function(){t.notificationService.smallBox({title:"Update Successful",content:"The Activity selection was successfully updated.",color:"#739E73",timeout:5e3,icon:"fa fa-check"}),t.fetchActivities()},function(t){console.log(t)})},e.prototype.assignToCategory=function(){this.router.navigate(["maintenance","activity","activity-to-activity-category"],{queryParams:{origin:"activities"}})},e.prototype.fetchActivities=function(){var t=this;this.sub=this.activityService.getAll().subscribe(function(e){t.tableData=e}),this.selectedActivitiesUid=new Array,this.isNewActivity=!1,this.isUpdateActivity=!1,this.allSelected=!1},e.prototype.updateSelection=function(t,e){if(e)this.selectedActivitiesUid.push(t);else{for(var i=[],n=0,s=this.selectedActivitiesUid;n<s.length;n++){var a=s[n];a!=t&&i.push(a)}this.selectedActivitiesUid=i}this.allSelected=this.tableData.length==this.selectedActivitiesUid.length},e}(l.BaseFormComponent);y=__decorate([n.Component({selector:"activity-list",template:i(2439),providers:[s.ActivityService]}),__param(3,n.Inject(o.AppProperties)),__metadata("design:paramtypes",["function"==typeof(d=void 0!==s.ActivityService&&s.ActivityService)&&d||Object,"function"==typeof(v=void 0!==r.Router&&r.Router)&&v||Object,"function"==typeof(g=void 0!==r.ActivatedRoute&&r.ActivatedRoute)&&g||Object,"function"==typeof(p=void 0!==o.AppProperties&&o.AppProperties)&&p||Object,"function"==typeof(u=void 0!==c.NotificationService&&c.NotificationService)&&u||Object])],y),e.ActivityListComponent=y;var d,v,g,p,u},1902:function(t,e,i){"use strict";var n=i(0),s=i(346),a=i(83),o=i(154),c=i(84),r=function(t){function e(e,i){var n=t.call(this,i)||this;return n.http=e,n}return __extends(e,t),e.prototype.getAll=function(){return this.http.get(this.apiBaseUrl+"/activities",this.getStandardRequestOptions()).map(this.extractMany).catch(this.handleError)},e.prototype.extractOne=function(t){return t.json()||{}},e.prototype.extractMany=function(t){return t.json()||{}},e.prototype.createActivity=function(t){return this.http.post(this.apiBaseUrl+"/activities",t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.deleteActivity=function(t){return this.http.delete(this.apiBaseUrl+"/activities/"+t,this.getStandardRequestOptions()).map(function(t){return!0}).catch(this.handleError)},e.prototype.handleError=function(e){return 409==e.status?c.Observable.throw({error:"The Activity has already been associated with Categories",status:e.status}):t.prototype.handleError.call(this,e)},e.prototype.getActivityById=function(t){return this.http.get(this.apiBaseUrl+"/activities/"+t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.updateActivity=function(t){return this.http.put(this.apiBaseUrl+"/activities/"+t.uid,t,this.getStandardRequestOptions()).map(this.extractOne).catch(this.handleError)},e.prototype.toggleActivityStatus=function(t){return this.http.post(this.apiBaseUrl+"/activities/activity-status/toggle",t,this.getStandardRequestOptions()).catch(this.handleError)},e}(s.AbstractService);r=__decorate([n.Injectable(),__param(1,n.Inject(o.AppProperties)),__metadata("design:paramtypes",["function"==typeof(l=void 0!==a.Http&&a.Http)&&l||Object,"function"==typeof(y=void 0!==o.AppProperties&&o.AppProperties)&&y||Object])],r),e.ActivityService=r;var l,y},2112:function(t,e,i){"use strict";var n=i(0),s=i(1808),a=i(2113),o=i(1403),c=i(1535),r=i(1379),l=i(1372),y=i(1402),d=i(1806),v=i(1807),g=function(){function t(){}return t}();g=__decorate([n.NgModule({declarations:[s.ActivityListComponent,d.ActivityCategoryListComponent,v.ActivityToActivityCategoryComponent],imports:[a.routing,o.SmartadminModule,c.SmartadminDatatableModule,r.SmartadminInputModule,l.AdvantumInputModule,y.AdvantumCommonsModule],providers:[]}),__metadata("design:paramtypes",[])],g),e.ActivityModule=g},2113:function(t,e,i){"use strict";var n=i(33),s=i(1808),a=i(1806),o=i(1807);e.routes=[{path:"activity-list",component:s.ActivityListComponent,data:{pageTitle:"Activity"}},{path:"activity-category-list",component:a.ActivityCategoryListComponent,data:{pageTitle:"Activity Category"}},{path:"activity-to-activity-category",component:o.ActivityToActivityCategoryComponent,data:{pageTitle:"Activity-Category Assignment"}}],e.routing=n.RouterModule.forChild(e.routes)},2437:function(t,e){t.exports='<div id="content">\n    <div class="row">\n        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">\n            <h1 class="page-title txt-color-blueDark">\n\n                \x3c!-- PAGE HEADER --\x3e\n                <sa-big-breadcrumbs [items]="[\'Activity Category\']" icon="users"\n                                    class="col-xs-12 col-sm-7 col-md-7 col-lg-7"></sa-big-breadcrumbs>\n            </h1>\n        </div>\n\n        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">\n            \x3c!-- Button trigger modal --\x3e\n            <a href="javascript:void(0);" (click)="createNewActivityCategory()" class="btn btn-success btn-lg pull-right header-btn hidden-mobile">{{ \'Create New Category\' }}</a>\n        </div>\n    </div>\n    <section id="widget-grid" class="">\n        <div class="row">\n            <section id="widget-grid-2" class="col-xs-12">\n                <div class="row">\n                    <article class="col-xs-12">\n                        <sa-widget [editbutton]="false" color="blueDark">\n                            <header>\n                                <span class="widget-icon"> <i class="fa fa-table"></i> </span>\n                                <h2>Search Results </h2>\n                            </header>\n                            <div>\n                                <div class="widget-body no-padding">\n                                    <table class="table table-bordered table-striped"\n                                           [mfData]="tableData | dataFilter : filterQuery" #mf="mfDataTable"\n                                           [mfRowsOnPage]="5">\n                                        <thead>\n                                            <tr>\n                                                <th colspan="10">\n                                                    Filter by activity name:\n                                                    <input class="form-control" [(ngModel)]="filterQuery"\n                                                           placeholder="Search activity name"/>\n                                                </th>\n                                            </tr>\n                                            <tr>\n                                                <th class="text-center">\n                                                    <label>\n                                                        <input [(ngModel)]="allSelected" name="selectAll" type="checkbox" class="checkbox" (click)="toggleCategoriesSelection($event)"/>\n                                                        <span></span>\n                                                    </label>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="name">Category Name</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="description">Category Description</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="status">Status</mfDefaultSorter>\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let obj of mf.data; let rowIndex = index" [ngClass]="{\'bg-color-white\': rowIndex % 2 == 1}">\n                                                <td class="text-center">\n                                                    <label style="margin-bottom: 0;">\n                                                        <input *ngIf="activityCategory!=obj" [(ngModel)]="obj.selected" name="checkbox" type="checkbox" class="checkbox" (click)="updateSelection(obj.uid,$event.target.checked)"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf="activityCategory!=obj">\n                                                        {{ obj.name }}\n                                                    </span>\n                                                    <input *ngIf="activityCategory==obj" class="form-control" type="text"\n                                                                  name="activityName" id="activityName"\n                                                                  [(ngModel)]="activityCategory.name" required>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf="activityCategory!=obj">\n                                                        {{ obj.description }}\n                                                    </span>\n                                                    <input *ngIf="activityCategory==obj" class="form-control" type="text"\n                                                           name="description" id="description"\n                                                           [(ngModel)]="activityCategory.description" required>\n                                                </td>\n                                                <td>\n                                                    <div>\n                                                        <span *ngIf="activityCategory!=obj" [ngSwitch]="obj.status">\n                                                            <span *ngSwitchCase="\'Active\'"\n                                                                  class="font-sm label label-success">Active</span>\n                                                            <span *ngSwitchCase="\'Inactive\'"\n                                                                  class="font-sm label label-warning">Inactive</span>\n                                                        </span>\n                                                        <select *ngIf="activityCategory==obj" name="userStatus"\n                                                                [(ngModel)]="activityCategory.status"\n                                                                class="form-control">\n                                                            <option value="" disabled="">- Select -</option>\n                                                            <option value="Active" selected>Active</option>\n                                                            <option value="Inactive">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <a *ngIf="activityCategory!=obj" class="btn btn-primary" (click)="updateActivityCategory(obj)"><i class="fa fa-edit"></i></a>\n                                                    <a *ngIf="activityCategory!=obj" class="btn btn-danger" (click)="deleteActivityCategory(obj.uid)"><i class="fa  fa-trash-o"></i></a>\n                                                    <button *ngIf="activityCategory==obj" type="button"\n                                                            class="btn btn-primary" (click)="submitActivityCategory()" [disabled]="!activityCategory.name || !activityCategory.description || !activityCategory.status">Save\n                                                    </button>\n                                                    <button *ngIf="activityCategory==obj" type="button"\n                                                            class="btn" (click)="cancelEdit()">Cancel\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf="isNewActivityCategory">\n                                                <td class="text-center">\n                                                </td>\n                                                <td>\n                                                    <input class="form-control" type="text"\n                                                           name="activityName" id="activityName"\n                                                           [(ngModel)]="activityCategory.name" required>\n                                                </td>\n                                                <td>\n                                                    <input class="form-control" type="text"\n                                                           name="description" id="description"\n                                                           [(ngModel)]="activityCategory.description" required>\n                                                </td>\n                                                <td>\n                                                    <div>\n                                                        <select name="userStatus"\n                                                                [(ngModel)]="activityCategory.status"\n                                                                class="form-control">\n                                                            <option value="" disabled="">- Select -</option>\n                                                            <option value="Active" selected>Active</option>\n                                                            <option value="Inactive">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <button type="button"\n                                                            class="btn btn-primary" (click)="submitActivityCategory()" [disabled]="!activityCategory.name || !activityCategory.description || !activityCategory.status">Save\n                                                    </button>\n                                                    <button type="button"\n                                                            class="btn" (click)="cancelEdit()">Cancel\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr>\n                                                <td colspan="10">\n                                                    <mfBootstrapPaginator\n                                                            [rowsOnPageSet]="[5,10,25]"></mfBootstrapPaginator>\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </table>\n                                    <div class="form-actions">\n                                        <div class="row">\n                                            <div class="col-sm-6">\n                                                <div class="row">\n                                                    <div class="col-sm-12 text-left">\n                                                        <button type="button"\n                                                                class="btn btn-default btn-lg" (click)="activeDeactiveActivities()" [disabled]="selectedActivityCategoriesUid.length == 0">Activate/Deactivate\n                                                        </button>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                            <div class="col-sm-6">\n                                                <div class="row">\n                                                    <div class="col-xs-12 text-right">\n                                                        <button type="button"\n                                                                class="btn btn-default btn-lg" (click)="assignActivities()">Assign Activities\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </sa-widget>\n                    </article>\n                </div>\n            </section>\n        </div>\n    </section>\n</div>'},2438:function(t,e){t.exports='<div id="content">\n    <div class="row">\n        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">\n            <h1 class="page-title txt-color-blueDark">\n\n                \x3c!-- PAGE HEADER --\x3e\n                <sa-big-breadcrumbs [items]="[\'Activity-Category Assignment\']" icon="users"\n                                    class="col-xs-12 col-sm-7 col-md-7 col-lg-7"></sa-big-breadcrumbs>\n            </h1>\n        </div>\n    </div>\n\n    <section id="widget-grid" class="">\n        <div class="row">\n            <section id="widget-grid-2" class="col-xs-12">\n                <div class="row">\n                    <article class="col-xs-12">\n                        <sa-widget [editbutton]="false" color="blueDark">\n                            <header>\n                                <span class="widget-icon"> <i class="fa fa-table"></i> </span>\n                                <h2>Search Results </h2>\n                            </header>\n                            <div>\n                                <div class="row">\n                                    <div class="col-sm-4">\n                                        <div class="form-group" >\n                                            <label class="control-label"> Category <span class="text-danger required-field-marker">*</span></label>\n                                            <div class="input">\n                                                <select name="categoryList"\n                                                        class="form-control" [(ngModel)]="uidActivityCategory"\n                                                        (onSelection)="chargeListActivityUnassigned($event)"\n                                                        [advComboBox]="{ placeholder: \'Select a Category\' }">\n                                                    <option value="" disabled="">- Select -</option>\n                                                    <option *ngFor="let option of listActivityCategory" [ngValue]="option.uid">{{option.name}}</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="widget-body no-padding">\n                                    <table class="table table-bordered table-striped"\n                                           [mfData]="tableData | dataFilter : filterQuery" #mf="mfDataTable"\n\n                                           [mfRowsOnPage]="5">\n                                        <thead>\n                                            <tr>\n                                                <th colspan="11">\n                                                    Filter by activity name:\n                                                    <input class="form-control" [(ngModel)]="filterQuery"\n                                                           placeholder="Search activity name"/>\n                                                </th>\n                                            </tr>\n                                            <tr>\n                                                <th class="text-center">\n                                                    <label>\n                                                        <input [(ngModel)]="allSelected" name="selectAll" type="checkbox" class="checkbox" (click)="toggleCategoriesSelection($event)"/>\n                                                        <span></span>\n                                                    </label>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="name">Activity Name</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="vesselTypesString">Vessel Type</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="weight">Weight</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="occurrences">Occurences</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="ranged">Ranged</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="mandatory">Mandatory</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="billable">Billable</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="statementOfFact">SOF</mfDefaultSorter>\n                                                </th>\n                                                <th>\n                                                    <mfDefaultSorter by="status">Status</mfDefaultSorter>\n                                                </th>\n                                                <th></th>\n                                             </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor="let obj of mf.data; let rowIndex = index" [ngClass]="{\'bg-color-white\': rowIndex % 2 == 1}">\n                                                <td class="text-center">\n                                                    <label style="margin-bottom: 0;">\n                                                        <input *ngIf="activityCategoryAssignment != obj" [(ngModel)]="obj.selected" name="checkbox" type="checkbox" class="checkbox" (click)="updateSelection(obj.uid,$event.target.checked)" />\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>{{obj.activity.name}}</td>\n                                                <td>\n                                                    <span *ngIf="activityCategoryAssignment != obj">\n                                                        <span *ngIf="obj.vesselTypes.length == 1">\n                                                            {{obj.vesselTypes[0].description}}\n                                                        </span>\n                                                        <span *ngIf="obj.vesselTypes.length > 1">\n                                                            Multiple\n                                                        </span>\n                                                    </span>\n                                                    <select *ngIf="activityCategoryAssignment == obj" required name="vesselType" multiple="multiple" id="multiselect" class="form-control custom-scroll col-sm-12"\n                                                            title="Click to Select a Vessel Type"\n                                                            [(ngModel)]="activityCategoryAssignment.vesselTypesIds">\n                                                        <option *ngFor="let vesselType of listVesselTypes" [ngValue]="vesselType.uid" >{{vesselType.description}}</option>\n                                                    </select>\n                                                </td>\n\n                                                <td>\n                                                    <span *ngIf="activityCategoryAssignment != obj">{{obj.weight}}</span>\n                                                    <input *ngIf="activityCategoryAssignment == obj" class="form-control" type="number" min="1" max="20"\n                                                           name="weight" required [(ngModel)]="activityCategoryAssignment.weight">\n                                                </td><td>\n                                                    <span *ngIf="activityCategoryAssignment != obj">{{obj.occurrences}}</span>\n                                                    <input *ngIf="activityCategoryAssignment == obj" class="form-control" type="number" min="0"\n                                                           name="occurences" required [(ngModel)]="activityCategoryAssignment.occurrences">\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" [disabled]="activityCategoryAssignment != obj" type="checkbox" class="checkbox" [(ngModel)]="obj.ranged"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" [disabled]="activityCategoryAssignment != obj"  type="checkbox" class="checkbox" [(ngModel)]="obj.mandatory"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" [disabled]="activityCategoryAssignment != obj"  type="checkbox" class="checkbox" [(ngModel)]="obj.billable"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" [disabled]="activityCategoryAssignment != obj"  type="checkbox" class="checkbox" [(ngModel)]="obj.statementOfFact"/>\n                                                        <span></span>\n                                                    </label></td>\n                                                <td>\n                                                    <div>\n                                                        <span *ngIf="activityCategoryAssignment != obj" [ngSwitch]="obj.status">\n                                                            <span *ngSwitchCase="\'Active\'"\n                                                                  class="font-sm label label-success">Active</span>\n                                                            <span *ngSwitchCase="\'Inactive\'"\n                                                                  class="font-sm label label-warning">Inactive</span>\n                                                        </span>\n                                                        <select *ngIf="activityCategoryAssignment == obj"  name="userStatus"\n                                                                class="form-control" [(ngModel)]="obj.status">\n                                                            <option value="" disabled="">- Select -</option>\n                                                            <option value="Active" selected>Active</option>\n                                                            <option value="Inactive">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <a *ngIf="activityCategoryAssignment != obj" class="btn btn-primary" (click)="changeToUpdate(obj)"><i class="fa fa-edit"></i></a>\n                                                    <a *ngIf="activityCategoryAssignment != obj" class="btn btn-danger" (click)="deleteActivityCategoryAssignment(obj.uid)"><i class="fa  fa-trash-o"></i></a>\n                                                    <button *ngIf="activityCategoryAssignment == obj" type="button"\n                                                            class="btn btn-primary" (click)="submitActivityCategoryAssignment()" >Save\n                                                    </button>\n                                                    <button *ngIf="activityCategoryAssignment == obj" type="button"\n                                                            class="btn" (click)="cancelEdit()">Cancel\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf="isNew">\n                                                <td class="text-center"></td>\n                                                <td>\n                                                    <select name="activityList" [advComboBox]="{ placeholder: \'Select an Activity\' }"\n                                                            class="form-control" [(ngModel)]="activityCategoryAssignment.activity.uid"\n                                                            (onSelection)="changeActivity($event)"\n                                                            required>\n                                                        <option value="" disabled="">- Select -</option>\n                                                        <option *ngFor="let activity of listActivityUnassigned" [ngValue]="activity.uid">{{activity.name}}</option>\n                                                    </select>\n                                                </td>\n                                                <td>\n                                                    <select required name="vesselType" multiple="multiple" id="multiselect" class="form-control custom-scroll col-sm-12"\n                                                            title="Click to Select a Vessel Type"\n                                                            [(ngModel)]="activityCategoryAssignment.vesselTypesIds">\n                                                        <option *ngFor="let vesselType of listVesselTypes" [ngValue]="vesselType.uid" >{{vesselType.description}}</option>\n                                                    </select>\n                                                </td>\n                                                <td>\n                                                    <input class="form-control" type="number" min="1" max="20"\n                                                           name="weight" required [(ngModel)]="activityCategoryAssignment.weight">\n                                                </td><td>\n                                                    <input class="form-control" type="number" min="0"\n                                                           name="occurrences" required [(ngModel)]="activityCategoryAssignment.occurrences">\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" type="checkbox" class="checkbox" [(ngModel)]="activityCategoryAssignment.ranged"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" type="checkbox" class="checkbox" [(ngModel)]="activityCategoryAssignment.mandatory"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" type="checkbox" class="checkbox" [(ngModel)]="activityCategoryAssignment.billable"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <label style="margin-bottom: 0;">\n                                                        <input name="checkbox" type="checkbox" class="checkbox" [(ngModel)]="activityCategoryAssignment.statementOfFact"/>\n                                                        <span></span>\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <div>\n                                                        <select name="userStatus"\n                                                                class="form-control" [(ngModel)]="activityCategoryAssignment.status">\n                                                            <option value="" disabled="">- Select -</option>\n                                                            <option value="Active" selected>Active</option>\n                                                            <option value="Inactive">Inactive</option>\n                                                        </select>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <button type="button"\n                                                            class="btn btn-primary" (click)="submitActivityCategoryAssignment()" >Save\n                                                    </button>\n                                                    <button type="button"\n                                                            class="btn" (click)="cancelEdit()">Cancel\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                        <tr>\n                                            <td colspan="11">\n                                                <mfBootstrapPaginator\n                                                        [rowsOnPageSet]="[5,10,25]"></mfBootstrapPaginator>\n                                            </td>\n                                        </tr>\n                                        </tfoot>\n                                    </table>\n                                    <div class="form-actions">\n                                        <div class="row">\n                                            <div class="col-sm-6">\n                                                <div class="row">\n                                                    <div class="col-xs-12 text-left">\n                                                        <button type="button"\n                                                                class="btn btn-default btn-lg"  (click)="newActivity()" [disabled]="!uidActivityCategory">Assign New Activity\n                                                        </button>\n                                                        <button type="button"\n                                                                class="btn btn-default btn-lg" (click)="activeDeactiveActivityCategoryAssignments()" [disabled]="!selectedActivityCategoryAssignmentsUid.length > 0">Activate/Deactivate\n                                                        </button>\n                                                        <button type="button" (click)="cancel()"\n                                                                class="btn btn-default btn-lg">Cancel\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </sa-widget>\n                    </article>\n                </div>\n            </section>\n        </div>\n    </section>\n</div>'},2439:function(t,e){t.exports='<div id="content">\n    <div class="row">\n        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">\n            <h1 class="page-title txt-color-blueDark">\n\n                \x3c!-- PAGE HEADER --\x3e\n                <sa-big-breadcrumbs [items]="[\'Activity\']" icon="users"\n                                    class="col-xs-12 col-sm-7 col-md-7 col-lg-7"></sa-big-breadcrumbs>\n            </h1>\n        </div>\n\n        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">\n            \x3c!-- Button trigger modal --\x3e\n            <a href="javascript:void(0);" (click)="createNewActivity()" class="btn btn-success btn-lg pull-right header-btn hidden-mobile">{{ \'Create New Activity\' }}</a>\n        </div>\n    </div>\n\n\n    <section id="widget-grid" class="">\n        <div class="row">\n            <section id="widget-grid-2" class="col-xs-12">\n                <div class="row">\n                    <article class="col-xs-12">\n                        <sa-widget [editbutton]="false" color="blueDark">\n                            <header>\n                                <span class="widget-icon"> <i class="fa fa-table"></i> </span>\n                                <h2>Search Results </h2>\n                            </header>\n                            <div>\n                                <div class="widget-body no-padding">\n                                    <form #mainForm="ngForm" novalidate="novalidate" (ngSubmit)="onSubmit()">\n                                        <table class="table table-bordered table-striped"\n                                               [mfData]="tableData | dataFilter : filterQuery" #mf="mfDataTable"\n                                               [mfRowsOnPage]="5">\n                                            <thead>\n                                                <tr>\n                                                    <th colspan="10">\n                                                        Filter by activity name:\n                                                        <input class="form-control" [(ngModel)]="filterQuery" name="filterQuery"\n                                                               placeholder="Search activity name"/>\n                                                    </th>\n                                                </tr>\n                                                <tr>\n                                                    <th class="text-center">\n                                                        <label>\n                                                            <input [(ngModel)]="allSelected" name="selectAll" type="checkbox" class="checkbox" (click)="toggleActivitiesSelection($event)"/>\n                                                            <span></span>\n                                                        </label>\n                                                    </th>\n                                                    <th>\n                                                        <mfDefaultSorter by="name">Activity Name</mfDefaultSorter>\n                                                    </th>\n                                                    <th>\n                                                        <mfDefaultSorter by="description">Activity Description</mfDefaultSorter>\n                                                    </th>\n                                                    <th>\n                                                        <mfDefaultSorter by="status">Status</mfDefaultSorter>\n                                                    </th>\n                                                    <th></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor="let obj of mf.data; let rowIndex = index" [ngClass]="{\'bg-color-white\': rowIndex % 2 == 1}">\n                                                    <td class="text-center">\n                                                        <label style="margin-bottom: 0;">\n                                                            <input *ngIf="activity != obj" [(ngModel)]="obj.selected" name="checkbox" type="checkbox" class="checkbox" (click)="updateSelection(obj.uid,$event.target.checked)"/>\n                                                            <span></span>\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <span>{{ obj.name }}</span>\n                                                        <div *ngIf="activity == obj && formErrors.name" class="alert alert-danger">\n                                                            {{ formErrors.name }}\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <span *ngIf="activity != obj">{{ obj.description }}</span>\n                                                        <input *ngIf="activity == obj" class="form-control" type="text"\n                                                               name="description" id="description"\n                                                               [(ngModel)]="activity.description" required>\n                                                        <div *ngIf="activity == obj && formErrors.activityDescription" class="alert alert-danger">\n                                                            {{ formErrors.activityDescription }}\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <div>\n                                                            <span *ngIf="activity != obj" [ngSwitch]="obj.status">\n                                                                <span *ngSwitchCase="\'Active\'"\n                                                                      class="font-sm label label-success">Active</span>\n                                                                <span *ngSwitchCase="\'Inactive\'"\n                                                                      class="font-sm label label-warning">Inactive</span>\n                                                            </span>\n                                                            <select *ngIf="activity == obj" name="userStatus"\n                                                                    [(ngModel)]="activity.status"\n                                                                    class="form-control">\n                                                                <option value="" disabled="">- Select -</option>\n                                                                <option value="Active" selected>Active</option>\n                                                                <option value="Inactive">Inactive</option>\n                                                            </select>\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <a *ngIf="activity != obj" class="btn btn-primary" (click)="updateActivity(obj)"><i class="fa fa-edit"></i></a>\n                                                        <a *ngIf="activity != obj" class="btn btn-danger" (click)="deleteActivity(obj.uid)"><i class="fa  fa-trash-o"></i></a>\n                                                        <button *ngIf="activity == obj" type="button"\n                                                                class="btn btn-primary" (click)="submitActivity()" [disabled]="!activity.name || !activity.description || !activity.status">Save\n                                                        </button>\n                                                        <button *ngIf="activity == obj" type="button"\n                                                                class="btn" (click)="cancelEdit()">Cancel\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                                <tr *ngIf="isNewActivity">\n                                                    <td class="text-center">\n                                                    </td>\n                                                    <td>\n                                                        <input class="form-control" type="text"\n                                                               name="name" id="activityName"\n                                                               [(ngModel)]="activity.name" required>\n                                                        <div *ngIf="formErrors.name" class="alert alert-danger">\n                                                            {{ formErrors.name }}\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <input class="form-control" type="text"\n                                                               name="description" id="description1"\n                                                               [(ngModel)]="activity.description" required>\n                                                        <div *ngIf="formErrors.activityDescription" class="alert alert-danger">\n                                                            {{ formErrors.activityDescription }}\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <div>\n                                                            <select name="userStatus"\n                                                                    [(ngModel)]="activity.status"\n                                                                    class="form-control">\n                                                                <option value="" disabled="">- Select -</option>\n                                                                <option value="Active" selected>Active</option>\n                                                                <option value="Inactive">Inactive</option>\n                                                            </select>\n                                                        </div>\n                                                    </td>\n                                                    <td>\n                                                        <button type="button"\n                                                                class="btn btn-primary" (click)="submitActivity()" [disabled]="!activity.name || !activity.description || !activity.status">Save\n                                                        </button>\n                                                        <button type="button"\n                                                                class="btn" (click)="cancelEdit()">Cancel\n                                                        </button>\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n\n                                            <tfoot>\n                                            <tr>\n                                                <td colspan="10">\n                                                    <mfBootstrapPaginator\n                                                            [rowsOnPageSet]="[5,10,25]"></mfBootstrapPaginator>\n                                                </td>\n                                            </tr>\n                                            </tfoot>\n                                        </table>\n                                        <div class="form-actions">\n                                            <div class="row">\n                                                <div class="col-sm-6">\n                                                    <div class="row">\n                                                        <div class="col-xs-12 text-left">\n                                                            <button type="button"\n                                                                        class="btn btn-default btn-lg" (click)="activeDeactiveActivities()" [disabled]="selectedActivitiesUid.length == 0">Activate/Deactivate\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class="col-sm-6">\n                                                    <div class="row">\n                                                        <div class="col-xs-12 text-right">\n                                                            <button type="button"\n                                                                    class="btn btn-lg btn-default" (click)="assignToCategory()">Assign to Category\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </sa-widget>\n                    </article>\n                </div>\n            </section>\n        </div>\n    </section>\n</div>\n'}});