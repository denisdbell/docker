{"version":3,"file":"js/64.chunk.js","sources":["webpack:///./src/app/+graphs/+flot-charts/flot-examples.ts?d44f","webpack:///./src/app/shared/graphs/flot-chart/flot-chart.component.ts?eec0","webpack:///./src/app/shared/graphs/flot-chart/flot-chart.module.ts?5a80","webpack:///./src/app/+graphs/+flot-charts/flot-charts.component.ts","webpack:///./src/app/+graphs/+flot-charts/flot-charts.module.ts","webpack:///./src/app/+graphs/+flot-charts/flot-charts.routing.ts","webpack:///./src/app/+graphs/+flot-charts/flot-charts.component.html"],"sourcesContent":["\nexport const colors = {\n  \"chartBorderColor\": \"#efefef\",\n  \"chartGridColor\": \"#DDD\",\n  \"charMain\": \"#E24913\",\n  \"chartSecond\": \"#6595b4\",\n  \"chartThird\": \"#FF9F01\",\n  \"chartFourth\": \"#7e9d3a\",\n  \"chartFifth\": \"#BD362F\",\n  \"chartMono\": \"#000\"\n};\n\nexport const barChartDemoOptions = {\n  colors: [colors.chartSecond, colors.chartFourth, \"#666\", \"#BBB\"],\n  grid: {\n    show: true,\n    hoverable: true,\n    clickable: true,\n    tickColor: colors.chartBorderColor,\n    borderWidth: 0,\n    borderColor: colors.chartBorderColor\n  },\n  legend: true,\n  tooltip: true,\n  tooltipOpts: {\n    content: \"<b>%x</b> = <span>%y</span>\",\n    defaultTheme: false\n  }\n};\n\nexport const sinChartDemoOptions = {\n  series: {\n    lines: {\n      show: true\n    },\n    points: {\n      show: true\n    }\n  },\n  grid: {\n    hoverable: true,\n    clickable: true,\n    tickColor: colors.chartBorderColor,\n    borderWidth: 0,\n    borderColor: colors.chartBorderColor\n  },\n  tooltip: true,\n  tooltipOpts: {\n    //content : \"Value <b>$x</b> Value <span>$y</span>\",\n    defaultTheme: false\n  },\n  colors: [colors.chartSecond, colors.chartFourth],\n  yaxis: {\n    min: -1.1,\n    max: 1.1\n  },\n  xaxis: {\n    min: 0,\n    max: 15\n  }\n};\n\nexport const horizontalChartDemoOptions = {\n  colors : [colors.chartSecond, colors.chartFourth, \"#666\", \"#BBB\"],\n  grid : {\n    show : true,\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  legend : true,\n  tooltip : true,\n  tooltipOpts : {\n    content : \"<b>%x</b> = <span>%y</span>\",\n    defaultTheme : false\n  }\n};\n\nexport const salesChartDemoOptions = {\n  xaxis : {\n    mode : \"time\",\n    tickLength : 5\n  },\n  series : {\n    lines : {\n      show : true,\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.1\n        }, {\n          opacity : 0.15\n        }]\n      }\n    },\n    //points: { show: true },\n    shadowSize : 0\n  },\n  selection : {\n    mode : \"x\"\n  },\n  grid : {\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  tooltip : true,\n  tooltipOpts : {\n    content : \"Your sales for <b>%x</b> was <span>$%y</span>\",\n    dateFormat : \"%y-%0m-%0d\",\n    defaultTheme : false\n  },\n  colors : [colors.chartSecond]\n\n};\n\nexport const fillChartDemoOptions = {\n  xaxis : {\n    tickDecimals : 0\n  },\n  yaxis : {\n    tickFormatter : function(v) {\n      return v + \" cm\";\n    }\n  }\n};\n\nexport const pieChartDemoOptions = {\n  series : {\n    pie : {\n      show : true,\n      innerRadius : 0.5,\n      radius : 1,\n      label : {\n        show : false,\n        radius : 2 / 3,\n        formatter : function(label, series) {\n          return '<div style=\"font-size:11px;text-align:center;padding:4px;color:white;\">' + label + '<br/>' + Math.round(series.percent) + '%</div>';\n        },\n        threshold : 0.1\n      }\n    }\n  },\n  legend : {\n    show : true,\n    noColumns : 1, // number of colums in legend table\n    labelFormatter : null, // fn: string -> string\n    labelBoxBorderColor : \"#000\", // border color for the little label boxes\n    container : null, // container (as jQuery object) to put legend in, null means default on top of graph\n    position : \"ne\", // position of default legend container within plot\n    margin : [5, 10], // distance from grid edge to default legend container within plot\n    backgroundColor : \"#efefef\", // null means auto-detect\n    backgroundOpacity : 1 // set to 0 to avoid background\n  },\n  grid : {\n    hoverable : true,\n    clickable : true\n  }\n};\n\nexport const siteStatsDemoOptions = {\n  series : {\n    lines : {\n      show : true,\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.1\n        }, {\n          opacity : 0.15\n        }]\n      }\n    },\n    points : {\n      show : true\n    },\n    shadowSize : 0\n  },\n  yaxes : [{\n    min : 20,\n    tickLength : 5\n  }],\n  grid : {\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  tooltip : true,\n  tooltipOpts : {\n    content : \"%s for <b>%x:00 hrs</b> was %y\",\n    dateFormat : \"%y-%0m-%0d\",\n    defaultTheme : false\n  },\n  colors : [colors.charMain, colors.chartSecond],\n  xaxis : {\n    mode : \"time\",\n    tickLength : 10,\n    ticks : 15,\n    tickDecimals : 2\n  },\n  yaxis : {\n    ticks : 15,\n    tickDecimals : 0\n  }\n};\n\nexport const autoUpdatingChartDemoOptions = {\n  yaxis : {\n    min : 0,\n    max : 100\n  },\n  xaxis : {\n    min : 0,\n    max : 100\n  },\n  colors : [colors.chartFourth],\n  series : {\n    lines : {\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.4\n        }, {\n          opacity : 0\n        }]\n      },\n      steps : false\n    }\n  }\n};\n\n\nexport const FakeDataSource = {\n  data: [],\n  total: 200,\n  getRandomData: function(){\n    if (this.data.length > 0)\n      this.data = this.data.slice(1);\n\n    // do a random walk\n    while (this.data.length < this.total) {\n      var prev = this.data.length > 0 ? this.data[this.data.length - 1] : 50;\n      var y = prev + Math.random() * 10 - 5;\n      if (y < 0)\n        y = 0;\n      if (y > 100)\n        y = 100;\n      this.data.push(y);\n    }\n\n    // zip the generated y values with the x values\n    var res = [];\n    for (var i = 0; i < this.data.length; ++i)\n      res.push([i, this.data[i]])\n    return res;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+flot-charts/flot-examples.ts","import {\n  Component, OnInit, ElementRef, Input, AfterContentInit, OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n\n  selector: 'sa-flot-chart',\n  template: `\n    <div class=\"sa-flot-chart\" [ngStyle]=\"{width: width, height: height}\">&nbsp;</div>\n  `,\n  styles: [`\n  .sa-flot-chart{\n    overflow: hidden;\n  }\n`]\n})\nexport class FlotChartComponent implements AfterContentInit, OnChanges {\n\n  @Input() public data:any;\n  @Input() public graphClass: string= '';\n  @Input() public options:any;\n  @Input() public type:string;\n  @Input() width:string = '100%';\n  @Input() height:string = '250px';\n\n  private vendorLoaded = false;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterContentInit() {\n    System.import('imports-loader?this=>window!smartadmin-plugins/flot-bundle/flot-bundle.min.js').then(()=>{\n      this.vendorLoaded = true;\n      this.render(this.data)\n    });\n  }\n\n  render(data){\n    if(data){\n      $.plot(this.el.nativeElement.children[0], data, this.options)\n    }\n  }\n\n ngOnChanges(changes){\n    if(this.vendorLoaded && changes.data.currentValue){\n      this.render(changes.data.currentValue)\n    }\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/shared/graphs/flot-chart/flot-chart.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlotChartComponent } from './flot-chart.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [FlotChartComponent],\n  exports: [FlotChartComponent],\n})\nexport class FlotChartModule { }\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/shared/graphs/flot-chart/flot-chart.module.ts","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport * as examples from \"./flot-examples\"\nimport {JsonApiService} from \"../../core/api/json-api.service\";\nimport {FakeDataSource} from \"./flot-examples\";\nimport {FadeInTop} from \"../../shared/animations/fade-in-top.decorator\";\n\n@FadeInTop()\n@Component({\n  selector: 'sa-flot-charts',\n  template: require('./flot-charts.component.html'),\n})\nexport class FlotChartsComponent implements OnInit, OnDestroy {\n\n  public flotData:any;\n  public flotExamples:any;\n\n\n  public updatingData: Array<any>;\n\n  constructor(private jsonApiService:JsonApiService) {\n  }\n\n  ngOnInit() {\n    this.jsonApiService.fetch( '/graphs/flot.json').subscribe(data => this.flotData = data);\n    this.flotExamples = examples;\n\n    this.interval = setInterval(()=>{\n      this.updateStats()\n    }, 1000);\n    this.updateStats()\n  }\n\n  updateStats() {\n    this.updatingData = [FakeDataSource.getRandomData()]\n  }\n\n  private interval;\n\n  ngOnDestroy() {\n    this.interval &&  clearInterval(this.interval);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+flot-charts/flot-charts.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { flotChartsRouting } from './flot-charts.routing';\nimport { FlotChartsComponent } from './flot-charts.component';\nimport {SmartadminModule} from \"../../shared/smartadmin.module\";\nimport {FlotChartModule} from \"../../shared/graphs/flot-chart/flot-chart.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    flotChartsRouting,\n    SmartadminModule,\n    FlotChartModule\n  ],\n  declarations: [FlotChartsComponent]\n})\nexport class FlotChartsModule { }\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+flot-charts/flot-charts.module.ts","\nimport {ModuleWithProviders} from \"@angular/core\"\nimport { Routes, RouterModule } from '@angular/router';\nimport {FlotChartsComponent} from \"./flot-charts.component\";\n\nexport const flotChartsRoutes: Routes = [\n  {\n    path: '',\n    component: FlotChartsComponent\n  },\n];\n\nexport const flotChartsRouting = RouterModule.forChild(flotChartsRoutes);\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/+graphs/+flot-charts/flot-charts.routing.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs icon=\\\"bar-chart-o\\\" [items]=\\\"['Graphs', 'Flot Chart']\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <sa-stats></sa-stats>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n    <!-- row -->\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"flotData\\\">\\n\\n      <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Bar Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.barChartData\\\"\\n                         [options]=\\\"flotExamples.barChartDemoOptions\\\" ></sa-flot-chart>\\n\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Sin Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.sinChartData\\\"\\n                         [options]=\\\"flotExamples.sinChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Auto Updating Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"updatingData\\\"\\n                         [options]=\\\"flotExamples.autoUpdatingChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n      </article>\\n\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Horizontal Bar Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.horizontalBarChartData\\\"\\n                         [options]=\\\"flotExamples.horizontalChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n      </article>\\n\\n\\n      <article class=\\\"col-xs-12 col-sm-8 col-md-7 col-lg-7\\\">\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Plot Percentiles</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.fillChartData\\\"\\n                         [options]=\\\"flotExamples.fillChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n      </article>\\n\\n\\n      <article class=\\\"col-xs-12 col-sm-4 col-md-5 col-lg-5\\\">\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Pie Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.pieChartData\\\"\\n                         [options]=\\\"flotExamples.pieChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n      </article>\\n      <article class=\\\"col-xs-12\\\">\\n\\n        <sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Site Stats Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.siteStatsData\\\"\\n                         [options]=\\\"flotExamples.siteStatsDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n\\n      </article>\\n\\n\\n    </div>\\n\\n    <!-- end row -->\\n\\n  </sa-widgets-grid>\\n  <!-- end widget grid -->\\n\\n</div>\\n<!-- END MAIN CONTENT -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+graphs/+flot-charts/flot-charts.component.html\n// module id = 2352\n// module chunks = 64"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzQA;AAmBA;AAWA;AAAA;AARA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAlCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AAZA;AAEA;AACA;AAGA;AAKA;AAYA;AAyBA;AApCA;;;;;;;;;;;ACnBA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAOA;AAQA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AA/BA;AALA;AACA;AACA;AACA;AACA;AASA;AAuBA;AA/BA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;ACdA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;ACZA;;;;A","sourceRoot":""}