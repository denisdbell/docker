{"version":3,"file":"js/61.chunk.js","sources":["webpack:///./src/app/models/RefundReason.ts","webpack:///./src/app/services/maintenance/refund-reason/refund-reason.service.ts","webpack:///./src/app/maintenance/refund-reason/create/create-refund-reason.component.ts","webpack:///./src/app/maintenance/refund-reason/edit/edit-refund-reason.component.ts","webpack:///./src/app/maintenance/refund-reason/list/refund-reason-list.component.ts","webpack:///./src/app/maintenance/refund-reason/refund-reason.module.ts","webpack:///./src/app/maintenance/refund-reason/refund-reason.routing.ts","webpack:///./src/app/maintenance/refund-reason/create/create-refund-reason.component.html","webpack:///./src/app/maintenance/refund-reason/edit/edit-refund-reason.component.html","webpack:///./src/app/maintenance/refund-reason/list/refund-reason-list.component.html"],"sourcesContent":["import { DomainObject } from './DomainObject';\n\n/**\n * Represents Package Types\n */\nexport class RefundReason extends DomainObject {    \n    public description: string;\n\tpublic code: string;\n\tpublic numericCode: number;\n\t\n    constructor(data?: any) {\n        super(data);\n        \n        if (data) {            \n\t\t\tthis.description = data.description;\n\t\t\tthis.code = data.code;\n\t\t\tthis.numericCode = data.numericCode;\n\t\t}\n    }\t  \n\t\n\tpublic prepareData() {\n        \n     }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/models/RefundReason.ts","import { Injectable, Inject } from '@angular/core';\nimport { AppProperties } from '../../../app.properties';\nimport { Http, Response, URLSearchParams } from '@angular/http';\nimport { RefundReason } from '../../../models/RefundReason';\nimport { Observable } from 'rxjs/Rx';\nimport { AbstractService } from '../../abstract-service';\n\n/**\n * RefundReason service\n * \n * @export\n * @class RefundReasonService\n * @extends {AbstractService}\n */\n@Injectable()\nexport class RefundReasonService extends AbstractService {\n    \n    /**\n     * Creates an instance of RefundReasonService.\n     * @param {Http} http \n     * @param {AppProperties} appProps \n     * \n     * @memberOf RefundReasonService\n     */\n    constructor(private http: Http, @Inject(AppProperties) appProps: AppProperties) {\n        super(appProps);\n    }\n\n    /**\n     * Returns an {@link Observable} that emits {@link Array<RefundReason>}\n     * @returns {Observable<Array<RefundReason>>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public getAll(): Observable<Array<RefundReason>> {\n        return this.http.get(this.apiBaseUrl + '/refund-reasons', this.getStandardRequestOptions())\n                    .map(this.extractMany)\n                    .catch(this.handleError);\n    }\n\n    /**\n     * Returns an {@link Observable} that emits {@link Array<RefundReason>}\n     * @param {string} filter \n     * @returns {Observable<Array<RefundReason>>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public getByFilter(filter: string): Observable<Array<RefundReason>> {\n        let options = this.getStandardRequestOptions();\n        let searchParams = new URLSearchParams();\n        \n        searchParams.set(\"filter\", filter);\n        options.search = searchParams;\n        \n        return this.http.get(this.apiBaseUrl + '/refund-reasons', options)\n                .map(this.extractMany)\n                .catch(this.handleError);\n    }\n\n    /**\n     * Returns an {@link Observable} that emits {@link RefundReason}\n     * @param {number} uid \n     * @returns {Observable<RefundReason>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public getById(uid: number): Observable<RefundReason> {\n        return this.http.get(this.apiBaseUrl + '/refund-reason/' + uid, this.getStandardRequestOptions())\n                    .map(this.extractOne)\n                    .catch(this.handleError);\n    }\n    \n    /**\n     * Returns an {@link Observable} that emits {@link RefundReason}\n     * @param {RefundReason} refundReason \n     * @returns {Observable<RefundReason>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public create(refundReason: RefundReason): Observable<RefundReason> {\n        return this.http.post(this.apiBaseUrl + '/refund-reason', refundReason, \n            this.getStandardRequestOptions())\n                .map(this.extractOne)\n                .catch(this.handleError);\n    }\n    \n    /**\n     * Returns an {@link Observable} that emits {@link RefundReason}\n     * @param {number} uid \n     * @param {RefundReason} refundReason \n     * @returns {Observable<RefundReason>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public update(uid: number, refundReason: RefundReason): Observable<RefundReason> {\n        return this.http.put(this.apiBaseUrl + '/refund-reason/' + uid, refundReason, \n            this.getStandardRequestOptions())\n                .map(this.extractOne)\n                .catch(this.handleError);\n    }\n    \n    /**\n     * Returns an {@link Observable} that emits {@link boolean}\n     * @param {number} uid \n     * @returns {Observable<boolean>} \n     * \n     * @memberOf RefundReasonService\n     */\n    public delete(uid: number): Observable<boolean> {\n        return this.http.delete(this.apiBaseUrl + '/refund-reason/' + uid, \n            this.getStandardRequestOptions())\n                .map((res: Response) => {\n                    return true;\n                })\n                .catch(this.handleError);\n    }\n    \n    /**\n     * Extracts a {@link RefundReason} from a json string\n     * @private\n     * @param {Response} res \n     * @returns {RefundReason} \n     * \n     * @memberOf RefundReasonService\n     */\n    private extractOne(res: Response): RefundReason {\n        return new RefundReason(res.json() || {});\n    }\n\n    /**\n     * Extracts a {@link Array<RefundReason>} from a json string     * \n     * @private\n     * @param {Response} res \n     * @returns {Array<RefundReason>} \n     * \n     * @memberOf RefundReasonService\n     */\n    private extractMany(res: Response): Array<RefundReason> {\n        let result: Array<RefundReason> = [];\n        let jsonRes = res.json();\n        \n        if (jsonRes) {\n            jsonRes.forEach((refundReason: any) => {\n                result.push(new RefundReason(refundReason));\n            });\n        }\n        \n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/services/maintenance/refund-reason/refund-reason.service.ts","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { RefundReasonService } from \"../../../services/maintenance/refund-reason/refund-reason.service\";\nimport { RefundReason } from '../../../models/RefundReason';\nimport { BaseFormComponent } from \"../../../shared/component/form/base-form.component\";\n\n/**\n * RefundReason create component\n * \n * @export\n * @class RefundReasonCreateComponent\n * @extends {BaseFormComponent}\n * @implements {OnInit}\n */\n@Component({\n    selector: 'create-refund-reason',\n    template: require('./create-refund-reason.component.html'),\n    providers: [\n        RefundReasonService,\n    ]\n})\nexport class RefundReasonCreateComponent \n        extends BaseFormComponent \n        implements OnInit {\n    public model: RefundReason = new RefundReason();\n\n    /**\n     * Creates an instance of RefundReasonCreateComponent.\n     * @param {Router} _router \n     * @param {RefundReasonService} refundReasonService \n     * @param {UnitOfMeasureService} unitOfMeasure \n     * @param {PartyService} partyService \n     * \n     * @memberOf RefundReasonCreateComponent\n     */\n    public constructor(\n        private _router: Router, \n        private refundReasonService: RefundReasonService\n        ) {\n        super();\n    }\n\n    /**\n     * @inheritdoc\n     * @memberOf RefundReasonCreateComponent\n     */\n    public ngOnInit(): void {\n\n    }\n\n    /**\n     * Saves form data and returns to refundReason list\n     * @memberOf RefundReasonCreateComponent\n     */\n    public saveChangesAndReturn(): void {\n\t\tconsole.dir(this.model);\n        this.model.prepareData();\n        \n        this.refundReasonService.create(this.model).subscribe(\n            (refundReason: RefundReason) => {\n                this.model = refundReason;\n                if (this.notificationDialog) {\n                    this.notificationDialog.message = \"Refund Reason saved successfully\";\n                    this.notificationDialog.state.subscribe((state: any) => {\n                       // if (state == \"closed\") {\n                            this._router.navigateByUrl('/maintenance/refund-reason/list');\n                       // }\n                    });\n                    this.notificationDialog.showDialog();\n                } else {\n                    console.error(\"notificationDialog is undefined or null\");\n                }\n            },\n            (errors: any) => {\n                this.handleErrors(errors);\n            }\n        );\n    }\n    \n    /**\n     * Handles form submit\n     * @memberOf RefundReasonCreateComponent\n     */\n    public onSubmit() {\n        this.formSubmitted = true;\n        this.model.prepareData();\n        this.refundReasonService.create(this.model).subscribe(\n            (refundReason) => {\n                if (this.notificationDialog) {\n                    this.notificationDialog.message = \"Refund Reason saved successfully\";\n                    this.notificationDialog.state.subscribe((state: any) => {\n                        if (state == \"closed\") {\n                            //this._router.navigateByUrl('/maintenance/refund-reason/' + refundReason.uid + '/edit');\n\t\t\t\t\t\t\tthis._router.navigateByUrl('/maintenance/refund-reason/list');\n\t\t\t\t\t\t\t//this._router.navigateByUrl('/maintenance/refund-reason/create');\n                        }\n                    });\n                    this.notificationDialog.showDialog();\n                } else {\n                    console.error(\"notificationDialog is undefined or null\");\n                }\n            },\n            (errors) => {\n                this.handleErrors(errors);\n            }\n        );\n    }\n    \n    public validationMessages: any = {\n        'code': {\n            'required': 'HS Code is required.'\n        },\n        'description': {\n            'required': 'HS Code Description is required.'\n        },\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/refund-reason/create/create-refund-reason.component.ts","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { DoCheck } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from \"rxjs\";\n\nimport { RefundReasonService } from \"../../../services/maintenance/refund-reason/refund-reason.service\";\nimport { UnitOfMeasureService } from \"../../../services/common/unit-of-measure.service\";\nimport { RefundReason } from '../../../models/RefundReason';\nimport { BaseFormComponent } from \"../../../shared/component/form/base-form.component\";\n\n/**\n * RefundReason edit component \n * @export\n * @class RefundReasonEditComponent\n * @extends {BaseFormComponent}\n * @implements {OnInit}\n * @implements {DoCheck}\n */\n@Component({\n    selector: 'edit-refund-reason',\n    template: require('./edit-refund-reason.component.html'),\n    providers: [\n        RefundReasonService,\n    ]\n})\nexport class RefundReasonEditComponent extends BaseFormComponent\n        implements OnInit, DoCheck {\n    private sub: Subscription;\n    public refundReasonId: number;\n    public model: RefundReason = new RefundReason();\n\n    /**\n     * Creates an instance of RefundReasonEditComponent.\n     * @param {Router} _router \n     * @param {ActivatedRoute} activeRoute \n     * @param {RefundReasonService} refundReasonService \n     * @param {UnitOfMeasureService} unitOfMeasure \n     * @param {PartyService} partyService \n     * \n     * @memberOf RefundReasonEditComponent\n     */\n    public constructor(\n        private _router: Router, \n        private activeRoute: ActivatedRoute,\n        private refundReasonService: RefundReasonService,\n        ) {\n        super();\n    }\n\n    /**\n     * @inheritdoc\n     * @memberOf RefundReasonEditComponent\n     */\n    public ngOnInit(): void {\n        this.sub = this.activeRoute.params.subscribe(params => {\n            this.refundReasonId = +params['id']; // (+) converts string 'id' to a number\n            this.refundReasonService.getById(this.refundReasonId).subscribe((refundReason) => {\n                this.model = refundReason;\n                \n                this.loadAdditionalData();\n            }, (errors) => {\n                this._router.navigateByUrl('/miscellaneous/error404');\n            });\n        });\n    }\n    \n    /**\n     * Load aditional data for component\n     * @private\n     * @memberOf RefundReasonEditComponent\n     */\n    private loadAdditionalData() {\n\n    }\n    \n    /**\n     * Handles form submit\n     * @memberOf RefundReasonEditComponent\n     */\n    public onSubmit() {\n        this.formSubmitted = true;\n        this.model.prepareData();\n        this.refundReasonService.update(this.model.uid, this.model).subscribe(\n            (refundReason: RefundReason) => {\n                this.model = refundReason;\n                if (this.notificationDialog) {\n                    this.notificationDialog.message = \"Refund Reason updated successfully\";\n                    this.notificationDialog.state.subscribe((state: any) => {\n                        if (state == \"closed\") {\n                            this._router.navigateByUrl('/maintenance/refund-reason/list');\n                        }\n                    });\n                    this.notificationDialog.showDialog();\n                } else {\n                    console.error(\"notificationDialog is undefined or null\");\n                }\n            },\n            (errors: any) => {\n                this.handleErrors(errors);\n            }\n        );\n    }\n\n    /**\n     * @inheritdoc\n     * @memberOf RefundReasonEditComponent\n     */\n    public ngDoCheck() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n    }\n    \n    public validationMessages: any = {\n        'code': {\n            'required': 'HS Code is required.'\n        },\n        'description': {\n            'required': 'HS Code Description is required.'\n        },\t\t\n    };\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/refund-reason/edit/edit-refund-reason.component.ts","import { Subscription } from \"rxjs\"\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { ViewChild } from \"@angular/core/src/metadata/di\";\nimport { AppProperties } from '../../../app.properties';\n\nimport { RefundReasonService } from \"../../../services/maintenance/refund-reason/refund-reason.service\";\nimport { RefundReason } from \"../../../models/RefundReason\";\nimport { ConfirmationDialogComponent } from \"../../../shared/component/dialog/confirmation-dialog.component\";\nimport { NotificationService } from '../../../shared/utils/notification.service';\n\n/**\n * RefundReason list component\n *\n * @export\n * @class RefundReasonListComponent\n * @implements {OnInit}\n */\n@Component({\n    selector: 'refund-reason-list',\n    template: require('./refund-reason-list.component.html'),\n    providers: [\n        RefundReasonService,\n        AppProperties,\n        NotificationService\n    ]\n})\nexport class RefundReasonListComponent implements OnInit {\n    @ViewChild(ConfirmationDialogComponent)\n    public confirmationDialog: ConfirmationDialogComponent;\n    public dtOptions: any = {};\n    public tableData: RefundReason[] = [];\n    public filterQuery = \"\";\n    public dateFormat?: string;\n    public dateTimeFormat?: string;\n    private sub: Subscription;\n\n    /**\n     * Creates an instance of RefundReasonListComponent.\n     * @param {RefundReasonService} refundReasonService\n     * @param {AppProperties} appProps\n     *\n     * @memberOf RefundReasonListComponent\n     */\n    constructor(\n        private refundReasonService: RefundReasonService,\n        @Inject(AppProperties) appProps: AppProperties,\n        private notificationService: NotificationService\n    ) {\n        this.dateFormat = appProps.get(AppProperties.DEFAULT_DATE_FORMAT_KEY);\n        this.dateTimeFormat = appProps.get(AppProperties.DEFAULT_DATE_TIME_FORMAT_KEY);\n    }\n\n    /**\n     * @inheritdoc\n     * @memberOf RefundReasonListComponent\n     */\n    public ngOnInit(): void {\n        this.loadTableData();\n    }\n\n    /**\n     * Removes a refund\n     *\n     * @param {number} index\n     *\n     * @memberOf RefundReasonListComponent\n     */\n    public removeRefundReason(index: number): void {\n      let refundReason:any = index;\n      console.log(\"refund Reason:\", refundReason)\n      this.notificationService.smartMessageBox({\n          title : `<i class='fa fa-warning txt-color-orangeDark'></i> Confirm Delete`,\n          content: `You are about to permanently delete/cancel refund reason ${refundReason.code} Do you really want to do this?`,\n          buttons : '[No][Yes]'\n      }, (buttonPressed: string) => {\n            if (buttonPressed == \"Yes\") {\n                this.refundReasonService.delete(refundReason.uid).subscribe(\n                () => {\n                  this.notificationService.smallBox({\n                      title: \"Deletion Successful\",\n                      content: \"You have successfully deleted refund reason.\",\n                      color: \"#739E73\",\n                      timeout: 5000,\n                      icon: \"fa fa-check\"\n                  }, (errors) => {});\n                  this.loadTableData();\n                }, (errors) => {\n                        this.notificationService.smallBox({\n                            title: \"Error\",\n                            color: \"#C46A69\",\n                            icon: \"fa fa-warning\",\n                            content: \"Action cannot be completed at the moment.\",\n                            timeout: 5000\n                        }, (errors) => {});\n                    }\n                );\n            }\n        });\n    }\n\n\n    /**\n     * Opens delete confirmation dialog\n     * @memberOf RefundReasonListComponent\n     */\n    public openDeleteConfirmationDialog(item: RefundReason): void {\n\t\tthis.confirmationDialog.confirmationQuestion = \"You are about to delete Package Type \" + item.code + \". Are you sure you want to do this?\";\n\t\tthis.confirmationDialog.yesValue = item;\n\t\tconsole.dir(this.confirmationDialog);\n        this.confirmationDialog.showDialog();\n    }\n\n\n    /**\n     * Handles delete confirmation delete dialog response\n     *\n     * @param {(RefundReason | boolean)} response\n     *\n     * @memberOf RefundReasonListComponent\n     */\n    public onDeleteConfirm(response: RefundReason | boolean): void {\n        if (response != false) {\n            let refundReason = response as RefundReason;\n            this.refundReasonService.delete(refundReason.uid).subscribe((success: boolean) => {\n                this.loadTableData();\n            });\n        }\n    }\n\n    /**\n     * Loads table data\n     *\n     * @private\n     *\n     * @memberOf RefundReasonListComponent\n     */\n    private loadTableData(): void {\n        this.sub = this.refundReasonService.getAll().subscribe((refundReasons) => {\n            this.tableData = refundReasons;\n        });\n    }\n\n    /**\n     * @inheritdoc\n     * @memberOf RefundReasonListComponent\n     */\n    public ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n        }\n    }\n\n    public options = {};\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/refund-reason/list/refund-reason-list.component.ts","import { NgModule } from '@angular/core';\nimport { routing } from './refund-reason.routing';\nimport { SmartadminModule } from '../../shared/smartadmin.module';\nimport { SmartadminDatatableModule } from \"../../shared/ui/datatable/smartadmin-datatable.module\";\nimport { AdvantumCommonsModule } from \"../../shared/common/advantum-commons.module\";\nimport { SmartadminInputModule } from \"../../shared/forms/input/smartadmin-input.module\";\nimport { AdvantumInputModule } from \"../../shared/forms/advantum-input/advantum-input.module\";\n\nimport { RefundReasonCreateComponent } from './create/create-refund-reason.component';\nimport { RefundReasonEditComponent } from './edit/edit-refund-reason.component';\nimport { RefundReasonListComponent } from './list/refund-reason-list.component';\n\n\n@NgModule({\n  imports: [\n    SmartadminDatatableModule,\n    SmartadminModule,\n    AdvantumCommonsModule,\n    routing,\n    SmartadminInputModule,\n    AdvantumInputModule,\n  ],\n  \n  declarations: [\n    RefundReasonCreateComponent,   \n    RefundReasonEditComponent,\n    RefundReasonListComponent,\n  ],\n  \n  providers: [],\n})\n\nexport class RefundReasonModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/refund-reason/refund-reason.module.ts","import {Routes, RouterModule} from '@angular/router';\n\nimport { RefundReasonCreateComponent } from './create/create-refund-reason.component';\nimport { RefundReasonEditComponent } from './edit/edit-refund-reason.component';\nimport { RefundReasonListComponent } from './list/refund-reason-list.component';\n\nexport const routes: Routes = [\n\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n    { path: 'list', component: RefundReasonListComponent, data: { pageTitle: 'Search Refund Reasons' } },\n    { path: ':id/edit', component: RefundReasonEditComponent, data: { pageTitle: 'Edit RefundReason' } },\n    { path: 'create', component: RefundReasonCreateComponent, data: { pageTitle: 'Create RefundReason' } },\n    \n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/maintenance/refund-reason/refund-reason.routing.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n        <sa-big-breadcrumbs [items]=\\\"['RefundReason', model?.code]\\\" icon=\\\"desktop\\\"\\n            class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-7\\\"></sa-big-breadcrumbs>\\n    </div>\\n    \\n    <sa-widget>\\n        <header>\\n            <h2>Create Refund Reason</h2>\\n        </header>\\n        \\n        <div>\\n            <div class=\\\"widget-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <form #mainForm=\\\"ngForm\\\" novalidate=\\\"novalidate\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div>\\n                                <h4>Basic Details</h4>\\n                                <p>Required fields are denoted by <span class=\\\"text-danger required-field-marker\\\">*</span></p>\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n                                             'has-success': code.valid && formSubmitted,\\n                                             'has-error': !code.valid && formSubmitted\\n                                             }\\\">\\n                                             <label class=\\\"control-label\\\">Refund Reason Code<span class=\\\"text-danger required-field-marker\\\">*</span></label>\\n                                            <div class=\\\"input-group\\\">\\n                                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa  fa-map fa-fw\\\"></i></span>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                        name=\\\"code\\\" #code=\\\"ngModel\\\"\\n                                                        required [(ngModel)]=\\\"model.code\\\"\\n                                                        placeholder=\\\"Enter  Refund Reason\\\">\\n                                            </div>\\n                                            <div *ngIf=\\\"formErrors.code\\\" class=\\\"alert alert-danger\\\">\\n                                                {{ formErrors.code }}\\n                                            </div>\\n                                        </div>\\n                                    </div>                                   \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n                                             'has-success': description.valid && formSubmitted,\\n                                             'has-error': !description.valid && formSubmitted\\n                                             }\\\">\\n                                             <label class=\\\"control-label\\\">Refund Reason Description </label>\\n                                            <div class=\\\"input-group\\\">\\n                                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa  fa-map fa-fw\\\"></i></span>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                        name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                                                        [(ngModel)]=\\\"model.description\\\"\\n                                                        placeholder=\\\"Enter Refund Reason Description\\\">\\n                                            </div>\\n                                            <div *ngIf=\\\"formErrors.description\\\" class=\\\"alert alert-danger\\\">\\n                                                {{ formErrors.description }}\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-actions\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-xs-6 text-left\\\">\\n                                        <a routerLink=\\\"/maintenance/refund-reason/list\\\" \\n                                           class=\\\"btn btn-lg btn-default\\\">Return</a>\\n                                    </div>\\n                                    <div class=\\\"col-xs-6 text-right\\\">\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" \\n                                                [disabled]=\\\"!mainForm.form.valid\\\">Save</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </sa-widget>\\n    <notification-dialog></notification-dialog>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/refund-reason/create/create-refund-reason.component.html\n// module id = 2471\n// module chunks = 61","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <sa-big-breadcrumbs [items]=\\\"['RefundReason', model?.code]\\\" icon=\\\"desktop\\\"\\n            class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-7\\\"></sa-big-breadcrumbs>\\n\\n        <div class=\\\"col-xs-12 col-sm-5 col-md-5 col-lg-5\\\">\\n            <a routerLink=\\\"/maintenance/refund-reason/create\\\" class=\\\"btn btn-success btn-lg pull-right header-btn hidden-mobile\\\"><i class=\\\"fa fa-circle-arrow-up fa-lg\\\"></i> Create RefundReason</a>\\n        </div>\\n    </div>\\n    \\n    <sa-widget>\\n        <header>\\n            <h2>Edit RefundReason</h2>\\n        </header>\\n        \\n        <div>\\n            <div class=\\\"widget-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <form #mainForm=\\\"ngForm\\\" novalidate=\\\"novalidate\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div>\\n                                <h4>Basic Details</h4>\\n                                <p>Required fields are denoted by <span class=\\\"text-danger required-field-marker\\\">*</span></p>\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n                                             'has-success': code.valid && formSubmitted,\\n                                             'has-error': !code.valid && formSubmitted\\n                                             }\\\">\\n                                             <label class=\\\"control-label\\\">Refund Reason Code<span class=\\\"text-danger required-field-marker\\\">*</span></label>\\n                                            <div class=\\\"input-group\\\">\\n                                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa  fa-map fa-fw\\\"></i></span>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled\\n                                                        name=\\\"code\\\" #code=\\\"ngModel\\\"\\n                                                        required [(ngModel)]=\\\"model.code\\\"\\n                                                        placeholder=\\\"Enter Refund Reason Code\\\">\\n                                            </div>\\n                                            <div *ngIf=\\\"formErrors.code\\\" class=\\\"alert alert-danger\\\">\\n                                                {{ formErrors.code }}\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    \\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n                                             'has-success': description.valid && formSubmitted,\\n                                             'has-error': !description.valid && formSubmitted\\n                                             }\\\">\\n                                             <label class=\\\"control-label\\\">Refund Reason Description </label>\\n                                            <div class=\\\"input-group\\\">\\n                                                <span class=\\\"input-group-addon\\\"><i class=\\\"fa  fa-map fa-fw\\\"></i></span>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\"\\n                                                        name=\\\"description\\\" #description=\\\"ngModel\\\"\\n                                                        required [(ngModel)]=\\\"model.description\\\"\\n                                                        placeholder=\\\"Enter Refund Reason Description\\\">\\n                                            </div>\\n                                            <div *ngIf=\\\"formErrors.description\\\" class=\\\"alert alert-danger\\\">\\n                                                {{ formErrors.description }}\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-actions\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-xs-6 text-left\\\">\\n                                        <a routerLink=\\\"/maintenance/refund-reason/list\\\" \\n                                           class=\\\"btn btn-lg btn-default\\\">Return</a>\\n                                    </div>\\n                                    <div class=\\\"col-xs-6 text-right\\\">\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" \\n                                                [disabled]=\\\"!mainForm.form.valid\\\">Save</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </sa-widget>\\n    <notification-dialog></notification-dialog>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/refund-reason/edit/edit-refund-reason.component.html\n// module id = 2472\n// module chunks = 61","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-9 col-md-9 col-lg-9\\\">\\n            <h1 class=\\\"page-title txt-color-blueDark\\\">\\n\\n                <!-- PAGE HEADER -->\\n                <i class=\\\"fa-fw fa fa-search\\\"></i>\\n                Search Refund Reasons\\n            </h1>\\n        </div>\\n\\n        <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\n            <a routerLink=\\\"/maintenance/refund-reason/create\\\" class=\\\"btn btn-success btn-lg pull-right header-btn hidden-mobile\\\"><i class=\\\"fa fa-circle-arrow-up fa-lg\\\"></i> Create Refund Reason</a>\\n        </div>\\n    </div>\\n\\n    <!-- widget grid -->\\n    <section id=\\\"widget-grid\\\" class=\\\"\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n            <section id=\\\"widget-grid-2\\\" class=\\\"col-xs-12\\\">\\n\\n                <!-- row -->\\n                <div class=\\\"row\\\">\\n\\n                    <!-- NEW WIDGET START -->\\n                    <article class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n\\n                        <sa-widget [editbutton]=\\\"false\\\" color=\\\"blueDark\\\">\\n                            <header>\\n                                <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-table\\\"></i> </span>\\n                                <h2>Search Results </h2>\\n                            </header>\\n                            <div>\\n                                <div class=\\\"widget-body no-padding\\\">\\n                                    <table class=\\\"table table-bordered table-striped\\\" [mfData]=\\\"tableData | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th colspan=\\\"10\\\">\\n                                                    Filter by Description:\\n                                                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search Refund Reasons by code or description\\\" />\\n                                                </th>\\n                                            </tr>\\n                                            <tr>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"code\\\">Code</mfDefaultSorter>\\n                                                </th>\\n                                                <th>\\n                                                    <mfDefaultSorter by=\\\"description\\\">Description</mfDefaultSorter>\\n                                                </th>\\n                                                <th></th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let item of mf.data\\\">\\n                                                <td>{{ item.code }}</td>\\n                                                <td>{{ item.description }}</td>\\n                                                <td>\\n                                                    <a [routerLink]=\\\"['/maintenance/refund-reason', item.uid, 'edit']\\\" class=\\\"btn btn-primary\\\">\\n                                                        <i class=\\\"fa fa-edit\\\"></i>\\n                                                    </a>\\n                                                    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"removeRefundReason(item)\\\"><i class=\\\"fa  fa-trash-o\\\"></i></button>\\n                                                    <!--<button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"openDeleteConfirmationDialog(item)\\\"><i class=\\\"fa  fa-trash-o\\\"></i></button>\\n                                                    <confirmation-dialog\\n                                                        (onResponse)=\\\"onDeleteConfirm($event)\\\"\\n                                                        title=\\\"Delete RefundReason\\\"\\n                                                        message=\\\"You are about to delete Refund Reason  {{ item.description}} ({{item.code}}). Are you sure you want to do this?\\\"\\n                                                        [yesValue]=\\\"item\\\">\\n                                                    </confirmation-dialog>-->\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                        <tfoot>\\n                                            <tr>\\n                                                <td colspan=\\\"10\\\">\\n                                                    <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n                                                </td>\\n                                            </tr>\\n                                        </tfoot>\\n                                    </table>\\n                                </div>\\n                            </div>\\n                        </sa-widget>\\n                    </article>\\n\\n                </div>\\n\\n                <!-- end row -->\\n\\n            </section>\\n\\n        </div>\\n\\n    </section>\\n\\n</div>\\n<!-- END MAIN CONTENT -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/maintenance/refund-reason/list/refund-reason-list.component.html\n// module id = 2473\n// module chunks = 61"],"mappings":";;;;;;;AAAA;AAEA;;AAEA;AACA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;;AACA;AAEA;AAEA;AACA;AAAA;AAlBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;;;;;;AAMA;AAEA;AAAA;AAEA;;;;;;AAMA;AACA;AAAA;AAAA;;AAEA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAtIA;AADA;AAUA;AAAA;AA6HA;AAtIA;;;;;;;;;;;ACfA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;;AAOA;AAQA;AACA;AAIA;;;;;;;;AAQA;AACA;AAAA;AACA;AACA;AAbA;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3EA;AAEA;;;AAGA;AACA;AAEA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAUA;AAAA;AA/FA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AAgFA;AA/FA;;;;;;;;;;;ACvBA;AAGA;AACA;AAGA;AAEA;AACA;AAEA;;;;;;;AAOA;AAQA;AAAA;AAMA;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AAfA;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzEA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AAEA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAhGA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AA+EA;AAhGA;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;AAMA;AAUA;AAUA;;;;;;AAMA;AACA;AACA;AAEA;AAjBA;AACA;AACA;AAyHA;AAxGA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AA7HA;AADA;AACA;AAAA;AAFA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA;AADA;AA6GA;AA/HA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AAAA;AAEA;AAAA;AAAA;AAFA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAIA;AAFA;;;;;;;;;;AChCA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;ACfA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}